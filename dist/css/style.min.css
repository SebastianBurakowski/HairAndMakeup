*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-size:62.5%;scroll-behavior:smooth}body{background-color:#f5efed;font-size:1.6rem}.burger-btn{position:fixed;top:10px;right:10px;padding:1em;background:none;border:1px solid transparent;cursor:pointer;z-index:1000}.burger-btn:hover .burger-btn__bars:after{width:60%}.burger-btn:hover .burger-btn__bars:before{width:30%}.burger-btn:focus{outline:none;border:1px solid hsla(0,0%,100%,.5);border-radius:8px}.burger-btn__box{position:relative;width:40px;height:30px}.burger-btn__bars,.burger-btn__bars:after,.burger-btn__bars:before{position:absolute;right:0;content:"";height:3px;background-color:#fff;transition:width .3s}.burger-btn__bars{width:100%}.burger-btn__bars:after{width:100%;top:13px}.burger-btn__bars:before{width:100%;top:27px;transition-delay:.1s}.burger-btn .black-bars-color,.burger-btn .black-bars-color:after,.burger-btn .black-bars-color:before{background-color:#2e2e2e}.nav{position:fixed;top:0;width:100%;height:100vh;display:flex;justify-content:center;align-items:center;background-image:linear-gradient(180deg,#9c8977,rgba(75,66,56,.6235294118));z-index:150;transform:translateY(-120%);transition:transform 1s cubic-bezier(.17,.67,1,1.23)}.nav--active{transform:translateY(0)}.nav__item{letter-spacing:1px;text-align:center;font-size:2rem;position:relative;display:block;text-decoration:none;color:#fff;text-transform:uppercase;margin:.5em 0;padding:.5em 0}.nav__item:before{content:"";position:absolute;bottom:10px;left:0;width:100%;height:2px;transform:scaleX(0);transition:transform .5s;background-color:#f5efed}.nav__item:hover:before{transform:scaleX(1)}.header{z-index:100;overflow:hidden;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;width:100%;height:100vh;background-image:linear-gradient(45deg,#000,#000)}.header__video{background-color:#000;position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;opacity:.4;z-index:-1}.header__heading{font-family:Zeyada,cursive;font-weight:400;font-size:3rem;padding:.5em 0;color:#f5efed;animation:a 2s ease-in-out}.header__text{font-family:Playfair Display,serif;font-weight:lighter;letter-spacing:10px;margin-bottom:5em;animation:b 2s ease-in-out 1s forwards}.header__btn,.header__text{opacity:0;font-size:1.5rem;text-transform:uppercase;color:#f5efed}.header__btn{letter-spacing:1px;width:150px;font-family:Zeyada,cursive;background-color:transparent;padding:.6em 1.2em;text-decoration:none;border:1px solid #a18d79;border-radius:6px;transition:background-color 1s;animation:c 3s ease-in-out 2s forwards}.header__btn:hover{background-color:hsla(29,14%,50%,.2745098039)}.header__arrow{position:absolute;bottom:5px;left:50%;transform:translate(-50%,-50%);font-size:2rem;color:#f5efed;margin-left:-18px}@keyframes a{0%{opacity:0;transform:translateY(70%)}to{opacity:1;transform:translateY(0)}}@keyframes b{0%{opacity:0;transform:translateY(-200%)}to{opacity:1;transform:translateY(0)}}@keyframes c{0%{opacity:0}to{opacity:1}}.about__title{padding-top:.2em;padding-left:.5em}.about__info{display:flex;justify-content:center;align-items:center;flex-direction:column}.about__img{position:relative;opacity:0;width:260px;height:400px;border:none;border-radius:8px;margin-bottom:.5em;transition:3s;box-shadow:5px 5px 10px rgba(46,46,46,.2)}.about__img-box{display:flex;justify-content:center;align-items:center;background-color:transparent;width:40%;border-right:1px solid hsla(0,1%,76%,.548)}.about__heading{font-family:Zeyada,cursive;opacity:0;font-size:3rem;padding:.5em 1em;text-align:center}.about__text{opacity:0;text-align:center;font-family:Playfair Display,serif;letter-spacing:1px;font-size:1.8rem;padding:1em;padding-top:0}.about .activeAnimation{animation:a 2s ease-in-out forwards}.activeVideo{animation:a 1.5s ease-in-out forwards}.hero{position:relative;display:flex;justify-content:space-evenly;flex-direction:column;align-items:center;background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0));height:130vh;padding:1em}.hero__video{opacity:0;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.hero__video--second{animation-delay:1s}.hero__text2{position:absolute;right:50%;top:50%;width:30px;height:30px;transform:translate(50%,-50%)}.offers{background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0))}.offers__title{padding-top:.2em;padding-right:.5em}.offers__box{position:relative;display:flex;justify-content:center;align-items:center;border-top:2px solid #a18d79;border-bottom:2px solid #a18d79;padding:.5em 1em}.offers__list{text-align:center;margin:.5em 0;list-style:none}.offers__list a{font-weight:700;text-decoration:none;color:#575538;cursor:pointer}.offers__item{font-family:Playfair Display,serif;font-weight:lighter;font-size:1.8rem;padding:.5em 1em;border-bottom:1px solid #000;letter-spacing:1px}.offers__video{position:absolute;opacity:0}.rules{z-index:2;position:relative;background-image:url(../../../dist/img/header_img.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;overflow:hidden}.rules__hero{z-index:-1;position:absolute;top:0;left:0;background-color:rgba(0,0,0,.82);width:100%;height:300vh}.rules__header{opacity:0;font-size:4.5rem;padding:.5em 0;animation:a 2s ease-in-out forwards}.rules__header,.rules__title{color:#f5efed;text-align:center}.rules__title{font-size:3rem;padding:0 .5em;margin-bottom:1em}.rules__boxes{display:flex;justify-content:center;align-items:center;flex-direction:column}.rules__items{text-align:center;margin-left:1em;padding:1em}.rules__item{font-family:Playfair Display,serif;font-weight:lighter;font-size:1.8rem;padding:.2em 0}.rules__back,.rules__item{color:#f5efed;letter-spacing:1px}.rules__back{display:block;margin-top:50px;font-size:2.2rem;font-weight:700;padding:0 1em;text-decoration:none}.rules__faq{margin-top:2em;padding:.5em 1em}.acordeon{background-color:transparent;display:flex;justify-content:space-around;align-items:center;flex-direction:column;border-radius:50px;padding-bottom:0;width:100%;height:100%;border:1px solid hsla(0,1%,76%,.548);overflow:hidden;box-shadow:5px 5px 20px hsla(0,1%,76%,.548)}.acordeon-box{font-size:1.8rem;letter-spacing:1px;font-family:Playfair Display,serif;font-weight:lighter;margin-bottom:1em}.acordeon-box:last-child{margin-bottom:0}.acordeon-btn{color:#fff;font-size:2rem;padding:.5em 1em;cursor:pointer;background-color:transparent;border:none;border-bottom:1px solid hsla(0,1%,76%,.548)}.acordeon-info{display:none}.acordeon-info-text{text-align:center;color:#f5efed;font-size:1.8rem;padding:1em;border-bottom:1px solid #fff;border-radius:5px}.activeAcordeon{display:flex}.portfolio__images{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:1em 2em}.portfolio__images--item{display:block;margin-bottom:1em;width:200px;height:280px;border:none;border-radius:8px;box-shadow:5px 5px 10px rgba(46,46,46,.2);transition:box-shadow .4s,transform .4s}.portfolio__images--item:hover{box-shadow:8px 8px 13px rgba(46,46,46,.3);transform:scale(1.01)}.portfolio__video{opacity:1;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.portfolio__box--left{display:flex;justify-content:center;align-items:center;background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0))}.portfolio__box--right{display:none}.portfolio__more{color:#575538;text-decoration:none}.portfolio__more--box{height:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__more--text{font-family:Zeyada,cursive;font-size:2.3rem;font-weight:700}.portfolio__instagram{font-size:9rem}.wrapper{margin:0 auto;width:100%;max-width:1700px}.section-heading{font-family:Playfair Display,serif;text-align:left;font-weight:400;font-size:4rem;text-transform:uppercase;color:#a18d79;letter-spacing:2px}.section-heading--right{text-align:right}@media (min-width:390px){.portfolio__images{flex-direction:row;justify-content:space-between;flex-wrap:wrap}.portfolio__images--item{width:150px;height:230px}}@media (min-width:430px){.portfolio__images--item{width:170px;height:250px}}@media (min-width:480px){.header__heading{font-size:4rem}.header__text{font-size:2rem}.header__arrow{font-size:2.5rem;left:50%;transform:translate(-50%,-50%)}.about__text{font-size:2rem}.hero{height:140vh}.hero__video{height:450px}.offers__item{font-size:2rem}.rules__header{font-size:5rem}.rules__title{font-size:3.5rem}.acordeon,.acordeon-btn{width:400px}}@media (min-width:576px){.header__heading{font-size:4.5rem}.header__arrow,.header__text{font-size:2.5rem}.header__arrow{left:50%;transform:translate(-50%,-50%)}.header__btn{font-size:1.7rem}.about__title{font-size:4.5rem}.about__img{width:300px;height:450px}.about__heading{font-size:3.5rem}.hero{height:100%;flex-direction:row}.hero__video{height:350px}.hero__text2{position:absolute;right:50%;top:50%;transform:translate(50%,-50%)}.offers__title{font-size:4.5rem}.offers__video{opacity:1;height:70px;top:270px;left:-10px}.acordeon,.acordeon-btn{width:500px}.portfolio__images--item{width:200px;height:280px}}@media (min-width:670px){.hero__video{height:400px}.offers__video{height:80px;top:265px;left:10px}.rules__header{font-size:5.5rem}.rules__title{font-size:4rem}.rules__item{font-size:2rem;letter-spacing:1px}.acordeon{width:600px}.acordeon-btn{width:600px;font-size:2.2rem}.acordeon-info-text{color:#f5efed;font-size:2rem}.portfolio__images--item{width:170px;height:250px}}@media (min-width:768px){.header__heading{font-size:6rem}.header__arrow,.header__text{font-size:3rem}.hero__video{height:450px}.offers__item{padding:1em}.offers__video{height:100px;top:385px;left:10px}.portfolio__boxes{display:flex}.portfolio__images--item{width:170px;height:250px}.portfolio__box--left{width:65%}.portfolio__box--right{display:flex;position:sticky;top:0;height:100vh;width:35%;background-color:#575538;overflow:hidden}.portfolio__text{display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__title{font-weight:400;font-size:4.5rem;text-transform:uppercase;color:#a18d79;letter-spacing:2px}.portfolio__info,.portfolio__title{font-family:Playfair Display,serif;text-align:center}.portfolio__info{font-weight:lighter;font-size:1.6rem;padding:.5em 1em}}@media (min-width:900px){.about__title{font-size:5rem}.about__box{width:55%}.about__info{flex-direction:row;justify-content:space-around}.about__img{width:300px;height:450px;margin-bottom:0}.about__heading{font-size:4rem}.offers__title{font-size:5rem}.offers__item{font-size:2.2rem}.offers__video{top:430px;left:60px}.rules__header{font-size:6rem}.rules__title{font-size:5rem}.rules__item{font-size:2.2rem}.acordeon,.acordeon-btn{width:750px}.portfolio__images--item{width:200px;height:280px}.portfolio__title{font-size:5rem}.portfolio__info{font-size:2.2rem}}@media (min-width:1024px){.hero__video{height:500px}.hero__text2{width:40px;height:40px}.offers__video{top:430px;left:150px}.portfolio__images--item{width:280px;height:360px}.portfolio__title{font-size:5rem}.portfolio__info{font-size:2.2rem}}@media (min-width:1200px){.header__heading{font-size:7rem}.header__arrow,.header__text{font-size:3rem}.header__btn{font-size:2rem}.about__title{font-size:6rem}.about__img{width:400px;height:600px;margin-bottom:1em}.about__heading{font-size:5rem}.about__text{font-size:2.3rem}.hero__video{height:650px}.hero__text2{width:50px;height:50px}.offers__title{font-size:6rem}.offers__item{font-size:2.3rem}.offers__video{top:455px;left:245px}.rules__header{font-size:6.5rem}.rules__title{font-size:5.5rem}.rules__item{font-size:2.3rem}.acordeon{width:800px}.acordeon-btn{font-size:2.3rem;width:800px}.portfolio__images--item{width:320px;height:400px}.portfolio__title{font-size:6rem}.portfolio__info{font-size:2.3rem}}@media (min-width:1400px){.offers__video{top:455px;left:460px}.portfolio__images--item{width:300px;height:400px}.portfolio__title{font-size:6rem}.portfolio__info{font-size:2.3rem}.portfolio__video{height:500px}}@media (min-width:1800px){.hero__video{height:700px}.rules{width:100%;height:100vh}.rules__back{margin-top:200px}.portfolio__video{height:700px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
