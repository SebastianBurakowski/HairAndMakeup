*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-family:Zeyada,cursive;font-size:62.5%;scroll-behavior:smooth}body{background-color:#eee;font-size:1.6rem}.burger-btn{position:fixed;top:10px;right:10px;padding:1em;background:none;border:1px solid transparent;cursor:pointer;z-index:1000}.burger-btn:hover .burger-btn__bars:after{width:60%}.burger-btn:hover .burger-btn__bars:before{width:30%}.burger-btn:focus{outline:none;border:1px solid hsla(0,0%,100%,.5);border-radius:8px}.burger-btn__box{position:relative;width:40px;height:30px}.burger-btn__bars,.burger-btn__bars:after,.burger-btn__bars:before{position:absolute;right:0;content:"";height:3px;background-color:#fff;transition:width .3s}.burger-btn__bars{width:100%}.burger-btn__bars:after{width:100%;top:13px}.burger-btn__bars:before{width:100%;top:27px;transition-delay:.1s}.burger-btn .black-bars-color,.burger-btn .black-bars-color:after,.burger-btn .black-bars-color:before{background-color:#2e2e2e}.nav{position:fixed;top:0;width:100%;height:100vh;display:flex;justify-content:center;align-items:center;background-image:linear-gradient(180deg,#9c8977,rgba(75,66,56,.6235294118));z-index:150;transform:translateY(-120%);transition:transform 1s cubic-bezier(.17,.67,1,1.23)}.nav--active{transform:translateY(0)}.nav__item{letter-spacing:1px;text-align:center;font-size:2rem;position:relative;display:block;text-decoration:none;color:#fff;text-transform:uppercase;margin:.5em 0;padding:.5em 0}.nav__item:before{content:"";position:absolute;bottom:10px;left:0;width:100%;height:2px;transform:scaleX(0);transition:transform .5s;background-color:#eee}.nav__item:hover:before{transform:scaleX(1)}.header{z-index:100;overflow:hidden;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;width:100%;height:100vh;background-image:linear-gradient(45deg,#000,#000)}.header__video{background-color:#000;position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;opacity:.4;z-index:-1}.header__heading{font-weight:400;font-size:3rem;padding:.5em 0;color:#eee;animation:a 2s ease-in-out}.header__text{font-family:Dosis,sans-serif;font-weight:lighter;letter-spacing:10px;margin-bottom:5em;animation:a 2s ease-in-out 1.5s forwards}.header__btn,.header__text{opacity:0;font-size:1.5rem;text-transform:uppercase;color:#eee}.header__btn{letter-spacing:1px;width:150px;background-color:transparent;padding:.6em 1.2em;text-decoration:none;border:1px solid #a18d79;border-radius:6px;transition:background-color 1s;animation:b 3s ease-in-out 2s forwards}.header__btn:hover{background-color:hsla(29,14%,50%,.2745098039)}.header__arrow{position:absolute;bottom:5px;left:50%;transform:translate(-50%,-50%);font-size:2rem;color:#eee;margin-left:-18px}@keyframes a{0%{opacity:0;transform:translateY(70%)}to{opacity:1;transform:translateY(0)}}@keyframes b{0%{opacity:0}to{opacity:1}}.about{background-color:#eee}.about__title{padding-top:.2em;padding-left:.5em}.about__info{display:flex;justify-content:center;align-items:center;flex-direction:column}.about__img{opacity:0;width:260px;height:400px;border:none;border-radius:8px;margin-bottom:.5em;transition:3s;box-shadow:5px 5px 10px rgba(46,46,46,.2)}.about__heading{opacity:0;font-size:3rem;padding:.5em 1em;text-align:center}.about__text{opacity:0;text-align:center;font-family:Dosis,sans-serif;font-weight:lighter;letter-spacing:1px;font-size:1.8rem;padding:1em;padding-top:0}.about .activeAnimation{animation:a 2s ease-in-out forwards}.activeVideo{animation:a 3s ease-in-out forwards}.hero{position:relative;display:flex;justify-content:space-evenly;flex-direction:column;align-items:center;background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0));height:130vh;padding:1em}.hero__video{opacity:0;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.hero__video--second{animation-delay:1s}.hero__text{left:50%;top:30px;transform:translateX(-50%)}.hero__text,.hero__text2{position:absolute;width:30px;height:30px}.hero__text2{right:50%;top:50%;transform:translate(50%,-50%)}.hero__text3{left:50%;bottom:20px;transform:translateX(-50%)}.hero__text3,.hero__text5{position:absolute;width:30px;height:30px}.hero__text5{opacity:0;right:20px;top:440px}.wrapper{margin:0 auto;width:100%;max-width:1700px}.section-heading{text-align:left;font-weight:400;font-size:4rem;text-transform:uppercase;color:#a18d79;letter-spacing:2px}.section-heading--right{text-align:right}@media (min-width:480px){.header__heading{font-size:4rem}.header__text{font-size:2rem}.header__arrow{font-size:2.5rem;left:50%;transform:translate(-50%,-50%)}.about__text{font-size:2rem}}@media (min-width:576px){.header__heading{font-size:4.5rem}.header__arrow,.header__text{font-size:2.5rem}.header__arrow{left:50%;transform:translate(-50%,-50%)}.header__btn{font-size:1.7rem}.about__title{font-size:4.5rem}.about__img{width:300px;height:450px}.about__heading{font-size:3.5rem}}@media (min-width:768px){.header__heading{font-size:6rem}.header__arrow,.header__text{font-size:3rem}}@media (min-width:900px){.about__title{font-size:5rem}.about__box{width:55%}.about__info{flex-direction:row;justify-content:space-around}.about__img{width:300px;height:450px;margin-bottom:0}.about__heading{font-size:4rem}}@media (min-width:1200px){.header__heading{font-size:7rem}.header__arrow,.header__text{font-size:3rem}.header__btn{font-size:2rem}.about__title{font-size:6rem}.about__img{width:400px;height:600px;margin-bottom:1em}.about__heading{font-size:5rem}.about__text{font-size:2.3rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
