*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-family:Dosis,serif;font-weight:lighter;font-size:62.5%;scroll-behavior:smooth}body{position:relative;background-color:#faf8f0;font-size:1.6rem}.burger-btn{position:fixed;top:10px;right:10px;padding:1em;background:none;border:1px solid transparent;cursor:pointer;z-index:1000}.burger-btn:focus{outline:none;border:1px solid hsla(0,0%,100%,.5);border-radius:8px}.burger-btn__box{position:relative;width:40px;height:30px}.burger-btn__bars,.burger-btn__bars:after,.burger-btn__bars:before{position:absolute;right:0;content:"";height:3px;background-color:#fff;transition:width .3s}.burger-btn__bars{width:100%}.burger-btn__bars:after{width:100%;top:13px}.burger-btn__bars:before{width:100%;top:27px;transition-delay:.1s}.burger-btn .black-bars-color,.burger-btn .black-bars-color:after,.burger-btn .black-bars-color:before{background-color:#2e2e2e}.burger-active .burger-btn__bars:after{width:60%}.burger-active .burger-btn__bars:before{width:30%}.nav__desktop{display:none}.nav__mobile{transform:translateX(100%);justify-content:center;z-index:999;position:fixed;width:50%;height:100%;right:0;background-color:rgba(2,0,0,.668);border:none;border-radius:40px 0 0 40px;transition:transform 2s}.nav__items--mobile,.nav__mobile{display:flex;align-items:center;flex-direction:column}.nav__items--mobile{height:70%;justify-content:space-around}.nav__item--mobile{width:100%;display:block;text-align:center;font-family:League Spartan,serif;font-weight:100;letter-spacing:-1px;text-decoration:none;text-transform:uppercase;color:#fff;font-size:1.7rem;padding:.5em 1em;transition:background-color 1s}.nav__item--mobile:hover{background-color:rgba(2,0,0,.615)}.nav__link{font-weight:500}.navActive{transform:translateX(0)}.header{z-index:100;overflow:hidden;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;width:100%;height:100vh;background-image:linear-gradient(45deg,#000,#000)}.header__video{background-color:#000;position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;opacity:.4;z-index:-1}.header__heading{font-family:Linden Hill,serif;font-style:italic;font-weight:lighter;font-size:3rem;padding:.5em 0;color:#faf8f0;animation:a 2s ease-in-out}.header__text{font-weight:lighter;letter-spacing:10px;color:#faf8f0;margin-bottom:5em;animation:b 2s ease-in-out 1s forwards}.header__btn,.header__text{opacity:0;font-family:Playfair Display,serif;font-size:1.5rem;text-transform:uppercase}.header__btn{letter-spacing:1px;width:150px;color:#f5efed;background-color:transparent;padding:.6em 1.2em;text-decoration:none;border:1px solid #a18d79;border-radius:6px;transition:background-color 1s;animation:c 3s ease-in-out 2s forwards}.header__btn:hover{background-color:hsla(29,14%,50%,.2745098039)}.header__arrow{position:absolute;bottom:5px;left:50%;transform:translate(-50%,-50%);font-size:2rem;color:#f5efed;margin-left:-18px}@keyframes a{0%{opacity:0;transform:translateY(70%)}to{opacity:1;transform:translateY(0)}}@keyframes b{0%{opacity:0;transform:translateY(-200%)}to{opacity:1;transform:translateY(0)}}.about__info{display:flex;justify-content:center;align-items:center;flex-direction:column}.about__img{position:relative;opacity:0;width:260px;height:400px;border:none;border-radius:8px;margin-bottom:.5em;transition:3s;box-shadow:5px 5px 10px rgba(46,46,46,.2)}.about__img-box{display:flex;justify-content:center;align-items:center;background-color:transparent;width:40%}.about__heading{font-family:Linden Hill,serif;font-size:3rem;padding:.5em 1em}.about__heading,.about__text{font-weight:lighter;opacity:0;text-align:center}.about__text{font-family:Dosis,serif;letter-spacing:1px;font-size:1.8rem;padding:1em;padding-top:0}.about .activeAnimation{animation:a 2s ease-in-out forwards}.activeVideo{animation:a 1.5s ease-in-out forwards}.hero{position:relative;display:flex;justify-content:space-evenly;flex-direction:column;align-items:center;padding:1em;background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0));height:130vh}.hero__video{opacity:0;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.hero__video--second{animation-delay:.5s}.offers__desktop{display:none}.offers__box,.offers__title{padding:.5em 1em}.offers__box{position:relative;display:flex;justify-content:center;align-items:center;border-top:2px solid #a18d79;border-bottom:2px solid #a18d79}.offers__list{text-align:center;margin:.5em 0;list-style:none}.offers__list a{font-weight:700;text-decoration:none;color:#9da292;cursor:pointer}.offers__item{font-family:Dosis,serif;font-weight:lighter;font-size:1.8rem;padding:.5em 1em;border-bottom:1px solid #000;letter-spacing:1px}.rules{z-index:2;position:relative;background-image:url(../../../dist/img/header_img.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;overflow:hidden}.rules__list{border-bottom:1px solid hsla(0,1%,76%,.548)}.rules__hero{z-index:-1;position:absolute;top:0;left:0;background-color:rgba(0,0,0,.82);width:100%;height:300vh}.rules__header{opacity:0;font-size:4.5rem;padding:.5em 0;animation:a 2s ease-in-out forwards}.rules__header,.rules__title{color:#f5efed;font-family:Playfair Display,serif;text-align:center}.rules__title{font-weight:lighter;font-size:3rem;padding:.5em}.rules__boxes{display:flex;justify-content:center;align-items:center;flex-direction:column}.rules__items{text-align:center;list-style:none;padding:1em 0}.rules__item{font-family:Dosis,serif;font-weight:lighter;font-size:1.8rem;padding:.2em 0}.rules__back,.rules__item{color:#f5efed;letter-spacing:1px}.rules__back{font-family:Playfair Display,serif;display:block;margin-top:50px;font-size:2.2rem;font-weight:700;padding:.5em 1em;text-decoration:none}.rules__faq{margin-top:2em;padding:.5em 1em}.acordeon{background-color:transparent;display:flex;justify-content:space-around;align-items:center;flex-direction:column;border-radius:50px;padding-bottom:0;width:100%;height:100%;border:1px solid hsla(0,1%,76%,.548);overflow:hidden;box-shadow:5px 5px 20px hsla(0,1%,76%,.548)}.acordeon-box{font-size:1.8rem;font-family:Dosis,serif;font-weight:lighter;letter-spacing:1px;margin-bottom:1em}.acordeon-box:last-child{margin-bottom:0}.acordeon-btn{font-family:Playfair Display,serif;font-weight:lighter;color:#fff;font-size:2rem;padding:.5em 1em;cursor:pointer;background-color:transparent;border:none;border-bottom:1px solid hsla(0,1%,76%,.548)}.acordeon-info{display:none}.acordeon-info-text{text-align:center;color:#f5efed;font-size:1.8rem;padding:1em;border-bottom:1px solid #fff;border-radius:5px}.activeAcordeon{display:flex}.portfolio__title--desktop{padding:.5em 1em}.portfolio__video{animation:none;width:200px;height:280px}.portfolio__images{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:1em 2em}.portfolio__images--item{display:block;margin-bottom:1em;width:200px;height:280px;border:none;border-radius:8px;box-shadow:5px 5px 10px rgba(46,46,46,.2);transition:box-shadow .4s,transform .4s}.portfolio__images--item:hover{box-shadow:8px 8px 13px rgba(46,46,46,.3);transform:scale(1.01)}.portfolio__video{opacity:1;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.portfolio__box--left{display:flex;justify-content:center;align-items:center}.portfolio__box--right{display:none}.portfolio__more{color:#9da292;text-decoration:none}.portfolio__more--box{height:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__more--text{font-size:2.3rem}.portfolio__instagram{font-size:9rem}.review{height:80vh;justify-content:space-between}.review,.review__container{display:flex;align-items:center}.review__container{position:relative;justify-content:center;background-color:#fff;height:100%;width:70%;margin-right:2em}.review__img{opacity:0;z-index:100;position:absolute;bottom:-300px;left:-100px;height:400px;width:300px}.review .activeReviewImg{animation:c 2s ease-in-out forwards}@keyframes c{0%{opacity:0}to{opacity:1}}.review__aside{width:20%;height:100%;background-color:#9da292}.review__title{color:#faf8f0;position:relative;top:50%;right:20px;font-family:Playfair Display,serif;font-weight:400;font-size:12rem;text-transform:uppercase;letter-spacing:2px;transform:rotate(-90deg)}.review__boxes{position:relative;display:flex;justify-content:space-around;align-items:center;height:90%;width:95%;background-color:#f5ddda;padding:1em 2em}.review__instagram{position:relative;display:block;text-decoration:none;color:#000;font-size:2.3rem;position:absolute;bottom:50px;right:50px;font-family:Linden Hill,serif;font-weight:lighter;border:none;padding:.2em 0;background-color:transparent}.review__instagram:after{bottom:0}.review__instagram:after,.review__instagram:before{content:"";position:absolute;left:50%;width:20%;height:1px;background-color:#000;transform:translateX(-50%)}.review__instagram:before{top:0}.review__link{display:block;text-align:center;color:#000;text-decoration:none;margin:0 1em;transition:transform 1s,box-shadow 1s}.review__link:hover{box-shadow:8px 8px 13px rgba(46,46,46,.3);transform:scale(1.01)}.review__opinion{height:250px;background-color:#fff;box-shadow:5px 5px 5px rgba(46,46,46,.2);border:none}.review__info{height:100%;position:relative;display:flex;justify-content:center;align-items:center}.review__header{position:absolute;top:0;left:0;padding:.5em 1em;font-family:Linden Hill,serif;font-size:3rem;border-bottom:1px solid hsla(0,1%,76%,.548)}.review__text{padding:.5em 1em;font-size:2rem;margin-top:3em}.review__slick{color:#fff;background-color:transparent;border:none;font-size:3.5rem;cursor:pointer}.wrapper{margin:0 auto;width:100%;max-width:1700px}.section-heading{font-family:Linden Hill,serif;text-align:left;font-weight:400;font-size:2.5rem;text-transform:uppercase;color:#a18d79;letter-spacing:2px}.section-heading--right{text-align:right}@media (min-width:390px){.portfolio__video{width:150px;height:230px}.portfolio__images{flex-direction:row;justify-content:space-between;flex-wrap:wrap}.portfolio__images--item{width:150px;height:200px}}@media (min-width:430px){.portfolio__images--item,.portfolio__video{width:170px;height:250px}}@media (min-width:480px){.nav__item--mobile,.nav__link{font-size:2rem}.header__heading{font-size:4rem}.header__text{font-size:2rem}.header__arrow{font-size:2.5rem;left:50%;transform:translate(-50%,-50%)}.about__text{font-size:2rem}.hero{height:140vh}.hero__video{height:450px}.offers__item{font-size:2rem}.rules__header{font-size:5rem}.rules__title{font-size:3.5rem}.acordeon,.acordeon-btn{width:400px}.portfolio__video{width:170px;height:250px}}@media (min-width:576px){.header__heading{font-size:4.5rem}.header__arrow,.header__text{font-size:2.5rem}.header__arrow{left:50%;transform:translate(-50%,-50%)}.header__btn{font-size:1.7rem}.about__title{font-size:3.5rem}.about__img{width:300px;height:450px}.about__heading{font-size:3.5rem}.hero{height:100%;flex-direction:row}.hero__video{height:350px}.hero__text2{position:absolute;right:50%;top:50%;transform:translate(50%,-50%)}.offers__title{font-size:3.5rem}.acordeon,.acordeon-btn{width:500px}.portfolio__images--item,.portfolio__video{width:200px;height:280px}}@media (min-width:670px){.nav__item--mobile,.nav__link{font-size:2.1rem}.hero__video{height:400px}.offers__video{height:80px;top:265px;left:10px}.rules__header{font-size:5.5rem}.rules__title{font-size:4rem}.rules__item{font-size:2rem;letter-spacing:1px}.acordeon{width:600px}.acordeon-btn{width:600px;font-size:2.2rem}.acordeon-info-text{color:#f5efed;font-size:2rem}.portfolio__images--item,.portfolio__video{width:170px;height:250px}}@media (min-width:768px){html{scroll-padding-top:40px}.nav__mobile{display:none}.nav__desktop{display:flex;opacity:0;justify-content:space-between;align-items:center;z-index:999;position:fixed;width:100%;height:40px;top:0;left:0;background-color:rgba(2,0,0,.668);animation:e 2s 1s ease-in-out forwards}.nav__items{width:60%;justify-content:center;padding:.5em 1em}.nav__item,.nav__items{height:100%;display:flex;align-items:center}.nav__item{justify-content:flex-start;width:100%;font-family:League Spartan,serif;font-weight:100;letter-spacing:-1px;text-decoration:none;text-transform:uppercase;color:#fff;font-size:1.7rem;transition:background-color 1s}.nav__item:hover{background-color:rgba(2,0,0,.615)}.nav__link{opacity:.5;display:block;font-family:League Spartan,serif;font-weight:100;letter-spacing:-1px;text-decoration:none;text-transform:uppercase;color:#fff;font-size:1.7rem;padding:.5em 1em;transition:background-color 1s;animation:d 2s ease-in-out infinite}.nav__link:hover{background-color:rgba(2,0,0,.615)}@keyframes d{0%{opacity:.5;font-weight:100}50%{opacity:1;font-weight:300}to{opacity:.5;font-weight:100}}@keyframes e{0%{opacity:0;transform:translateY(-100px)}to{opacity:1;transform:translateY(0)}}.burger-btn{display:none}.header__heading{font-size:6rem}.header__arrow,.header__text{font-size:3rem}.hero__video{height:450px}.offers__mobile{display:none}.offers__desktop{display:flex;justify-content:space-between;align-items:center;width:100%;height:70vh}.offers__container{position:relative;display:flex;justify-content:center;align-items:center;height:100%;width:80%;margin-right:2em}.offers__aside{width:15%;height:100%;background-color:#9da292}.offers__title{opacity:0;color:#faf8f0;position:relative;top:400px;right:30px;transform:translateY(-50%);font-family:Playfair Display,serif;font-weight:400;font-size:10rem;text-transform:uppercase;letter-spacing:5px}.offers__item{padding:1em}@keyframes f{0%{opacity:0;transform:translateX(-300px) rotate(-90deg)}to{opacity:1;transform:translateX(0) rotate(-90deg)}}.activeOfferTitle{animation:f 1s ease-in-out forwards}.portfolio__title--desktop{display:none}.portfolio__boxes{display:flex}.portfolio__images--item,.portfolio__video{width:170px;height:250px}.portfolio__box--left{width:80%}.portfolio__box--right{overflow:hidden;display:block;position:sticky;top:0;height:100vh;width:20%;background-color:#9da292}.portfolio__text{display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__title{opacity:0;transform:translateX(300px);color:#faf8f0;position:relative;top:350px;right:-15px;font-family:Playfair Display,serif;font-weight:400;font-size:12rem;text-transform:uppercase;letter-spacing:2px}@keyframes g{0%{opacity:0;transform:translateX(300px) rotate(-90deg)}to{opacity:1;transform:translateX(0) rotate(-90deg)}}.portfolio .activeTitle{animation:g 1s ease-in-out forwards}.portfolio__info{text-align:center;font-family:Playfair Display,serif;font-weight:lighter;font-size:1.6rem;padding:.5em 1em}}@media (min-width:900px){.nav__item,.nav__link{font-size:2rem}.about__title{font-size:4rem}.about__box{width:55%}.about__info{flex-direction:row;justify-content:space-around}.about__img{width:300px;height:450px;margin-bottom:0}.about__img-box{border-right:1px solid hsla(0,1%,76%,.548)}.about__heading{font-size:4rem}.offers__title{top:385px;right:40px}.rules__header{font-size:6rem}.rules__title{font-size:5rem}.rules__item{font-size:2.2rem}.acordeon,.acordeon-btn{width:750px}.portfolio__images--item,.portfolio__video{width:200px;height:280px}.portfolio__title{right:-20px}}@media (min-width:1024px){.hero__video{height:500px}.hero__text2{width:40px;height:40px}.portfolio__images--item,.portfolio__video{width:200px;height:300px}.portfolio__title{right:-40px}}@media (min-width:1100px){.portfolio__images--item,.portfolio__video{width:250px;height:350px}.offers__title{top:375px;right:50px}}@media (min-width:1200px){.header__heading{font-size:7rem}.header__arrow,.header__text{font-size:3rem}.header__btn{font-size:2rem}.about__title{font-size:5rem}.about__img{width:400px;height:600px;margin-bottom:1em}.about__heading{font-size:5rem}.about__text{font-size:2rem}.hero__video{height:650px}.hero__text2{width:50px;height:50px}.offers__item{font-size:2.3rem}.offers__title{top:370px;right:60px}.rules__header{font-size:6.5rem}.rules__title{font-size:5.5rem}.rules__item{font-size:2.3rem}.acordeon{width:800px}.acordeon-btn{font-size:2.3rem;width:800px}.portfolio__images--item,.portfolio__video{width:250px;height:350px}.portfolio__title{right:-60px}}@media (min-width:1400px){.nav__item,.nav__link{font-size:2.3rem}.offers__title{top:330px;right:80px}.portfolio__images--item,.portfolio__video{width:350px;height:450px}.portfolio__title{right:-100px}}@media (min-width:1800px){.hero__video{height:700px}.rules{width:100%;height:100vh}.rules__back{margin-top:200px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC9fcmVzZXQuc2NzcyIsInN0eWxlLmNzcyIsIl92YXJpYWJsZXMuc2NzcyIsImxheW91dC9fYmFzZS5zY3NzIiwiX2NvbXBvbmVudHMuc2NzcyIsIm1lZGlhL19leHRyYXNtYWxsLnNjc3MiLCJtZWRpYS9fc21hbGwuc2NzcyIsIm1lZGlhL19tZWRpdW0uc2NzcyIsIm1lZGlhL19sYXJnZS5zY3NzIiwibWVkaWEvX2V4dHJhbGFyZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxpQkFHSSxTQUFBLEFBQ0EsVUFBQSxBQUNBLHFCQUFBLENDRkosQURLQSxLQUNJLHdCQUFBLEFBQ0Esb0JBQUEsQUFDQSxnQkFBQSxBQUNBLHNCQUFBLENDRkosQURNQSxLQUNJLGtCQUFBLEFBQ0EseUJFZFUsQUZlVixnQkFBQSxDQ0hKLEFFZkEsWUFDSSxlQUFBLEFBQ0EsU0FBQSxBQUNBLFdBQUEsQUFDQSxZQUFBLEFBQ0EsZ0JBQUEsQUFDQSw2QkFBQSxBQUNBLGVBQUEsQUFDQSxZQUFBLENGa0JKLEFFZEksa0JBQ0ksYUFBQSxBQUNBLG9DQUFBLEFBQ0EsaUJBQUEsQ0ZnQlIsQUVaSSxpQkFDSSxrQkFBQSxBQUNBLFdBQUEsQUFDQSxXQUFBLENGY1IsQUVYSSxtRUFHSSxrQkFBQSxBQUNBLFFBQUEsQUFDQSxXQUFBLEFBQ0EsV0FBQSxBQUNBLHNCRG5DSyxBQ29DTCxvQkFBQSxDRldSLEFFUkksa0JBQ0ksVUFBQSxDRlVSLEFFUlEsd0JBQ0ksV0FBQSxBQUNBLFFBQUEsQ0ZVWixBRVBRLHlCQUNJLFdBQUEsQUFDQSxTQUFBLEFBQ0Esb0JBQUEsQ0ZTWixBRUxJLHVHQUdJLHdCRHJERCxDRDREUCxBRURJLHVDQUNJLFNBQUEsQ0ZJUixBRURJLHdDQUNJLFNBQUEsQ0ZHUixBRUVJLGNBQ0ksWUFBQSxDRkNSLEFFRUksYUFDSSwyQkFBQSxBQUVBLHVCQUFBLEFBR0EsWUFBQSxBQUNBLGVBQUEsQUFDQSxVQUFBLEFBQ0EsWUFBQSxBQUNBLFFBQUEs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Q2QsQU85bkNNLGVBQ0ksVUFBQSxBQUNBLFVBQUEsQ1Bnb0NWLENBQ0YsQU81bkNBLDBCQUVRLGlCQUNJLGNBQUEsQ1A2bkNWLEFPcG5DTSw2QkFDSSxjQUFBLENQeW5DVixBT3JuQ00sYUFDSSxjQUFBLENQdW5DVixBTzdtQ00sY0FDSSxjQUFBLENQK21DVixBTzVtQ00sWUFDSSxZQUFBLEFBQ0EsYUFBQSxBQUNBLGlCQUFBLENQOG1DVixBTzFtQ00sZ0JBQ0ksY0FBQSxDUDRtQ1YsQU94bUNNLGFBQ0ksY0FBQSxDUDBtQ1YsQU9wbUNNLGFBQ0ksWUFBQSxDUHNtQ1YsQU9qbUNNLGFBRUksV0FBQSxBQUNBLFdBQUEsQ1BrbUNWLEFPM2xDTSxjQUNJLGdCQUFBLENQNmxDVixBTzFsQ00sZUFDSSxVQUFBLEFBQ0EsVUFBQSxDUDRsQ1YsQU9ybENNLGVBRUksZ0JBQUEsQ1BzbENWLEFPbGxDTSxjQUVJLGdCQUFBLENQbWxDVixBTy9rQ00sYUFFSSxnQkFBQSxDUGdsQ1YsQU96a0NFLFVBQ0ksV0FBQSxDUDJrQ04sQU96a0NNLGNBQ0ksaUJBQUEsQUFDQSxXQUFBLENQMmtDVixBTzVqQ1UsMkNBQ0ksWUFBQSxBQUNBLFlBQUEsQ1Bra0NkLEFPM2pDTSxrQkFDSSxXQUFBLENQNmpDVixDQUNGLEFRaHVDQSwwQkFPUSxzQkFDSSxnQkFBQSxDUit0Q1YsQVF6dENNLGVBQ0ksVUFBQSxBQUNBLFVBQUEsQ1IydENWLEFRN3NDVSwyQ0FDSSxZQUFBLEFBQ0EsWUFBQSxDUm10Q2QsQVE1c0NNLGtCQUNJLFlBQUEsQ1I4c0NWLENBQ0YsQVF2c0NBLDBCQUdRLGFBQ0ksWUFBQSxDUnVzQ1YsQVFuc0NFLE9BQ0ksV0FBQSxBQUNBLFlBQUEsQ1Jxc0NOLEFRbnNDTSxhQUVJLGdCQUFBLENSb3NDVixDQUNGIiwiZmlsZSI6InN0eWxlLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlICcuL3ZhcmlhYmxlcycgYXMgKjtcclxuXHJcblxyXG4qLFxyXG4qOjphZnRlcixcclxuKjo6YmVmb3JlIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5odG1sIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIkRvc2lzXCIsIHNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgICBmb250LXNpemU6IDYyLjUlO1xyXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XHJcblxyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmQtY29sb3I7XHJcbiAgICBmb250LXNpemU6IDEuNnJlbTtcclxufSIsIiosXG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBcIkRvc2lzXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgZm9udC1zaXplOiA2Mi41JTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbmJvZHkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUY4RjA7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG4uYnVyZ2VyLWJ0biB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMHB4O1xuICByaWdodDogMTBweDtcbiAgcGFkZGluZzogMWVtO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiAxMDAwO1xufVxuLmJ1cmdlci1idG46Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5idXJnZXItYnRuX19ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDMwcHg7XG59XG4uYnVyZ2VyLWJ0bl9fYmFycywgLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyLCAuYnVyZ2VyLWJ0bl9fYmFyczo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgY29udGVudDogXCJcIjtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IHdpZHRoIDAuM3M7XG59XG4uYnVyZ2VyLWJ0bl9fYmFycyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMTNweDtcbn1cbi5idXJnZXItYnRuX19iYXJzOjpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAyN3B4O1xuICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzO1xufVxuLmJ1cmdlci1idG4gLmJsYWNrLWJhcnMtY29sb3IsXG4uYnVyZ2VyLWJ0biAuYmxhY2stYmFycy1jb2xvcjo6YWZ0ZXIsXG4uYnVyZ2VyLWJ0biAuYmxhY2stYmFycy1jb2xvcjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJlMmUyZTtcbn1cblxuLmJ1cmdlci1hY3RpdmUgLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyIHtcbiAgd2lkdGg6IDYwJTtcbn1cbi5idXJnZXItYWN0aXZlIC5idXJnZXItYnRuX19iYXJzOjpiZWZvcmUge1xuICB3aWR0aDogMzAlO1xufVxuXG4ubmF2X19kZXNrdG9wIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5uYXZfX21vYmlsZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHotaW5kZXg6IDk5OTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDAsIDAsIDAuNjY4KTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA0MHB4IDAgMCA0MHB4O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMnM7XG59XG4ubmF2X19pdGVtcy0tbW9iaWxlIHtcbiAgaGVpZ2h0OiA3MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLm5hdl9faXRlbS0tbW9iaWxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIkxlYWd1ZSBTcGFydGFuXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogMTAwO1xuICBsZXR0ZXItc3BhY2luZzogLTFweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAxLjdyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcztcbn1cbi5uYXZfX2l0ZW0tLW1vYmlsZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMiwgMCwgMCwgMC42MTUpO1xufVxuLm5hdl9fbGluayB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5uYXZBY3RpdmUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG59XG5cbi5oZWFkZXIge1xuICB6LWluZGV4OiAxMDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiKDAsIDAsIDApLCByZ2IoMCwgMCwgMCkpO1xufVxuLmhlYWRlcl9fdmlkZW8ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvcGFjaXR5OiAwLjQ7XG4gIHotaW5kZXg6IC0xO1xufVxuLmhlYWRlcl9faGVhZGluZyB7XG4gIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBmb250LXNpemU6IDNyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDA7XG4gIGNvbG9yOiAjRkFGOEYwO1xuICBhbmltYXRpb246IGhhbmRsZVNob3cgMnMgZWFzZS1pbi1vdXQ7XG59XG4uaGVhZGVyX190ZXh0IHtcbiAgb3BhY2l0eTogMDtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMTBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNGQUY4RjA7XG4gIG1hcmdpbi1ib3R0b206IDVlbTtcbiAgYW5pbWF0aW9uOiBoYW5kbGVTaG93RG93biAycyBlYXNlLWluLW91dCAxcyBmb3J3YXJkcztcbn1cbi5oZWFkZXJfX2J0biB7XG4gIG9wYWNpdHk6IDA7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIHdpZHRoOiAxNTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgcGFkZGluZzogMC42ZW0gMS4yZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ExOGQ3OTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzO1xuICBhbmltYXRpb246IGhhbmRsZVNob3dPcGFjaXR5IDNzIGVhc2UtaW4tb3V0IDJzIGZvcndhcmRzO1xufVxuLmhlYWRlcl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNDYsIDEyOCwgMTExLCAwLjI3NDUwOTgwMzkpO1xufVxuLmhlYWRlcl9fYXJyb3cge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNXB4O1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBmb250LXNpemU6IDJyZW07XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBtYXJnaW4tbGVmdDogLTE4cHg7XG59XG5cbkBrZXlmcmFtZXMgaGFuZGxlU2hvdyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg3MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3dEb3duIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAlKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxufVxuQGtleWZyYW1lcyBoYW5kbGVTaG93T3BhY2l0eSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbi5hYm91dF9faW5mbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmFib3V0X19pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG9wYWNpdHk6IDA7XG4gIHdpZHRoOiAyNjBweDtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICB0cmFuc2l0aW9uOiAzcztcbiAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoNDYsIDQ2LCA0NiwgMC4yKTtcbn1cbi5hYm91dF9faW1nLWJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgd2lkdGg6IDQwJTtcbn1cbi5hYm91dF9faGVhZGluZyB7XG4gIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgb3BhY2l0eTogMDtcbiAgZm9udC1zaXplOiAzcmVtO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5hYm91dF9fdGV4dCB7XG4gIG9wYWNpdHk6IDA7XG4gIGZvbnQtZmFtaWx5OiBcIkRvc2lzXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgcGFkZGluZzogMWVtIDFlbTtcbiAgcGFkZGluZy10b3A6IDA7XG59XG4uYWJvdXQgLmFjdGl2ZUFuaW1hdGlvbiB7XG4gIGFuaW1hdGlvbjogaGFuZGxlU2hvdyAycyBlYXNlLWluLW91dCBmb3J3YXJkcztcbn1cblxuLmFjdGl2ZVZpZGVvIHtcbiAgYW5pbWF0aW9uOiBoYW5kbGVTaG93IDEuNXMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XG59XG5cbi5oZXJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMWVtIDFlbTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDE5MSwgMTY4LCAxNDcsIDAuMTY4NjI3NDUxKSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSk7XG4gIGhlaWdodDogMTMwdmg7XG59XG4uaGVyb19fdmlkZW8ge1xuICBvcGFjaXR5OiAwO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoNDYsIDQ2LCA0NiwgMC41KTtcbn1cbi5oZXJvX192aWRlby0tc2Vjb25kIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAwLjVzO1xufVxuXG4ub2ZmZXJzX19kZXNrdG9wIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5vZmZlcnNfX3RpdGxlIHtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xufVxuLm9mZmVyc19fYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNhMThkNzk7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjYTE4ZDc5O1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG59XG4ub2ZmZXJzX19saXN0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAuNWVtIDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4ub2ZmZXJzX19saXN0IGEge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzlEQTI5MjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLm9mZmVyc19faXRlbSB7XG4gIGZvbnQtZmFtaWx5OiBcIkRvc2lzXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgZm9udC1zaXplOiAxLjhyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuXG4ucnVsZXMge1xuICB6LWluZGV4OiAyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi9kaXN0L2ltZy9oZWFkZXJfaW1nLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5ydWxlc19fbGlzdCB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcbn1cbi5ydWxlc19faGVybyB7XG4gIHotaW5kZXg6IC0xO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgyKTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwdmg7XG59XG4ucnVsZXNfX2hlYWRlciB7XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xuICBvcGFjaXR5OiAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogNC41cmVtO1xuICBwYWRkaW5nOiAwLjVlbSAwO1xuICBhbmltYXRpb246IGhhbmRsZVNob3cgMnMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XG59XG4ucnVsZXNfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGNvbG9yOiAjRjVFRkVEO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgcGFkZGluZzogMC41ZW0gMC41ZW07XG59XG4ucnVsZXNfX2JveGVzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4ucnVsZXNfX2l0ZW1zIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAxZW0gMDtcbn1cbi5ydWxlc19faXRlbSB7XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBmb250LWZhbWlseTogXCJEb3Npc1wiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBwYWRkaW5nOiAwLjJlbSAwO1xufVxuLnJ1bGVzX19iYWNrIHtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgY29sb3I6ICNGNUVGRUQ7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuICBmb250LXNpemU6IDIuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuLnJ1bGVzX19mYXEge1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbn1cblxuLmFjb3JkZW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaGFkb3c6IDVweCA1cHggMjBweCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcbn1cbi5hY29yZGVvbi1ib3gge1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiRG9zaXNcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG4uYWNvcmRlb24tYm94Omxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmFjb3JkZW9uLWJ0biB7XG4gIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMTk0LCAxOTMsIDE5MywgMC41NDgpO1xufVxuLmFjb3JkZW9uLWluZm8ge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmFjb3JkZW9uLWluZm8tdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNGNUVGRUQ7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBwYWRkaW5nOiAxZW0gMWVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uYWN0aXZlQWNvcmRlb24ge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ucG9ydGZvbGlvX190aXRsZS0tZGVza3RvcCB7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbn1cbi5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgYW5pbWF0aW9uOiBub25lO1xuICB3aWR0aDogMjAwcHg7XG4gIGhlaWdodDogMjgwcHg7XG59XG4ucG9ydGZvbGlvX19pbWFnZXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMWVtIDJlbTtcbn1cbi5wb3J0Zm9saW9fX2ltYWdlcy0taXRlbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiAyODBweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCByZ2JhKDQ2LCA0NiwgNDYsIDAuMik7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC40cywgdHJhbnNmb3JtIDAuNHM7XG59XG4ucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW06aG92ZXIge1xuICBib3gtc2hhZG93OiA4cHggOHB4IDEzcHggcmdiYSg0NiwgNDYsIDQ2LCAwLjMpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEpO1xufVxuLnBvcnRmb2xpb19fdmlkZW8ge1xuICBvcGFjaXR5OiAxO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoNDYsIDQ2LCA0NiwgMC41KTtcbn1cbi5wb3J0Zm9saW9fX2JveC0tbGVmdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLnBvcnRmb2xpb19fYm94LS1yaWdodCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ucG9ydGZvbGlvX19tb3JlIHtcbiAgY29sb3I6ICM5REEyOTI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5wb3J0Zm9saW9fX21vcmUtLWJveCB7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4ucG9ydGZvbGlvX19tb3JlLS10ZXh0IHtcbiAgZm9udC1zaXplOiAyLjNyZW07XG59XG4ucG9ydGZvbGlvX19pbnN0YWdyYW0ge1xuICBmb250LXNpemU6IDlyZW07XG59XG5cbi5yZXZpZXcge1xuICBoZWlnaHQ6IDgwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5yZXZpZXdfX2NvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luLXJpZ2h0OiAyZW07XG59XG4ucmV2aWV3X19pbWcge1xuICBvcGFjaXR5OiAwO1xuICB6LWluZGV4OiAxMDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMzAwcHg7XG4gIGxlZnQ6IC0xMDBweDtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgd2lkdGg6IDMwMHB4O1xufVxuLnJldmlldyAuYWN0aXZlUmV2aWV3SW1nIHtcbiAgYW5pbWF0aW9uOiBoYW5kbGVTaG93UmV2aWV3SW1nIDJzIGVhc2UtaW4tb3V0IGZvcndhcmRzO1xufVxuQGtleWZyYW1lcyBoYW5kbGVTaG93UmV2aWV3SW1nIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuLnJldmlld19fYXNpZGUge1xuICB3aWR0aDogMjAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5REEyOTI7XG59XG4ucmV2aWV3X190aXRsZSB7XG4gIGNvbG9yOiAjRkFGOEYwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogNTAlO1xuICByaWdodDogMjBweDtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxMnJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbn1cbi5yZXZpZXdfX2JveGVzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA5MCU7XG4gIHdpZHRoOiA5NSU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGNUREREE7XG4gIHBhZGRpbmc6IDFlbSAyZW07XG59XG4ucmV2aWV3X19pbnN0YWdyYW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1zaXplOiAyLjNyZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiA1MHB4O1xuICByaWdodDogNTBweDtcbiAgZm9udC1mYW1pbHk6IFwiTGluZGVuIEhpbGxcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDAuMmVtIDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLnJldmlld19faW5zdGFncmFtOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAyMCU7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuLnJldmlld19faW5zdGFncmFtOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogNTAlO1xuICB3aWR0aDogMjAlO1xuICBoZWlnaHQ6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cbkBrZXlmcmFtZXMgYnRuQW5pbWF0aW9uIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxufVxuLnJldmlld19fbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiBibGFjaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBtYXJnaW46IDAgMWVtO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMsIGJveC1zaGFkb3cgMXM7XG59XG4ucmV2aWV3X19saW5rOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogOHB4IDhweCAxM3B4IHJnYmEoNDYsIDQ2LCA0NiwgMC4zKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcbn1cbi5yZXZpZXdfX29waW5pb24ge1xuICBoZWlnaHQ6IDI1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDVweCByZ2JhKDQ2LCA0NiwgNDYsIDAuMik7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5yZXZpZXdfX2luZm8ge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ucmV2aWV3X19oZWFkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICBmb250LWZhbWlseTogXCJMaW5kZW4gSGlsbFwiLCBzZXJpZjtcbiAgZm9udC1zaXplOiAzcmVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XG59XG4ucmV2aWV3X190ZXh0IHtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICBmb250LXNpemU6IDJyZW07XG4gIG1hcmdpbi10b3A6IDNlbTtcbn1cbi5yZXZpZXdfX3NsaWNrIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMy41cmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi53cmFwcGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDE3MDBweDtcbn1cblxuLnNlY3Rpb24taGVhZGluZyB7XG4gIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDIuNXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNhMThkNzk7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG59XG4uc2VjdGlvbi1oZWFkaW5nLS1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMzkwcHgpIHtcbiAgLnBvcnRmb2xpb19fdmlkZW8ge1xuICAgIHdpZHRoOiAxNTBweDtcbiAgICBoZWlnaHQ6IDIzMHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX2ltYWdlcyB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC5wb3J0Zm9saW9fX2ltYWdlcy0taXRlbSB7XG4gICAgd2lkdGg6IDE1MHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MzBweCkge1xuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDE3MHB4O1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMTcwcHg7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG4gIC5uYXZfX2l0ZW0tLW1vYmlsZSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5uYXZfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAuaGVhZGVyX19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDRyZW07XG4gIH1cbiAgLmhlYWRlcl9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5oZWFkZXJfX2Fycm93IHtcbiAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIH1cbiAgLmFib3V0X190ZXh0IHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmhlcm8ge1xuICAgIGhlaWdodDogMTQwdmg7XG4gIH1cbiAgLmhlcm9fX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDQ1MHB4O1xuICB9XG4gIC5vZmZlcnNfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAucnVsZXNfX2hlYWRlciB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG4gIC5ydWxlc19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xuICB9XG4gIC5hY29yZGVvbiB7XG4gICAgd2lkdGg6IDQwMHB4O1xuICB9XG4gIC5hY29yZGVvbi1idG4ge1xuICAgIHdpZHRoOiA0MDBweDtcbiAgfVxuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDE3MHB4O1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGVhZGVyX19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDQuNXJlbTtcbiAgfVxuICAuaGVhZGVyX190ZXh0IHtcbiAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgfVxuICAuaGVhZGVyX19hcnJvdyB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB9XG4gIC5oZWFkZXJfX2J0biB7XG4gICAgZm9udC1zaXplOiAxLjdyZW07XG4gIH1cbiAgLmFib3V0X190aXRsZSB7XG4gICAgZm9udC1zaXplOiAzLjVyZW07XG4gIH1cbiAgLmFib3V0X19pbWcge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDQ1MHB4O1xuICB9XG4gIC5hYm91dF9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAzLjVyZW07XG4gIH1cbiAgLmhlcm8ge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG4gIC5oZXJvX192aWRlbyB7XG4gICAgaGVpZ2h0OiAzNTBweDtcbiAgfVxuICAuaGVyb19fdGV4dDIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogNTAlO1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDUwJSwgLTUwJSk7XG4gIH1cbiAgLm9mZmVyc19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xuICB9XG4gIC5hY29yZGVvbiB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICB9XG4gIC5hY29yZGVvbi1idG4ge1xuICAgIHdpZHRoOiA1MDBweDtcbiAgfVxuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMjgwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiAyODBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDY3MHB4KSB7XG4gIC5uYXZfX2l0ZW0tLW1vYmlsZSB7XG4gICAgZm9udC1zaXplOiAyLjFyZW07XG4gIH1cbiAgLm5hdl9fbGluayB7XG4gICAgZm9udC1zaXplOiAyLjFyZW07XG4gIH1cbiAgLmhlcm9fX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICB9XG4gIC5vZmZlcnNfX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gICAgdG9wOiAyNjVweDtcbiAgICBsZWZ0OiAxMHB4O1xuICB9XG4gIC5ydWxlc19faGVhZGVyIHtcbiAgICBmb250LXNpemU6IDUuNXJlbTtcbiAgfVxuICAucnVsZXNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDRyZW07XG4gIH1cbiAgLnJ1bGVzX19pdGVtIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgfVxuICAuYWNvcmRlb24ge1xuICAgIHdpZHRoOiA2MDBweDtcbiAgfVxuICAuYWNvcmRlb24tYnRuIHtcbiAgICB3aWR0aDogNjAwcHg7XG4gICAgZm9udC1zaXplOiAyLjJyZW07XG4gIH1cbiAgLmFjb3JkZW9uLWluZm8tdGV4dCB7XG4gICAgY29sb3I6ICNGNUVGRUQ7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMTcwcHg7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgfVxuICAucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICAgIHdpZHRoOiAxNzBweDtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgc2Nyb2xsLXBhZGRpbmctdG9wOiA0MHB4O1xuICB9XG4gIC5uYXZfX21vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAubmF2X19kZXNrdG9wIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG9wYWNpdHk6IDA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgei1pbmRleDogOTk5O1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAwLCAwLCAwLjY2OCk7XG4gICAgYW5pbWF0aW9uOiBoYW5kbGVOYXYgMnMgMXMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XG4gIH1cbiAgLm5hdl9faXRlbXMge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogNjAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIH1cbiAgLm5hdl9faXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZm9udC1mYW1pbHk6IFwiTGVhZ3VlIFNwYXJ0YW5cIiwgc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogLTFweDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDEuN3JlbTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzO1xuICB9XG4gIC5uYXZfX2l0ZW06aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMiwgMCwgMCwgMC42MTUpO1xuICB9XG4gIC5uYXZfX2xpbmsge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LWZhbWlseTogXCJMZWFndWUgU3BhcnRhblwiLCBzZXJpZjtcbiAgICBmb250LXdlaWdodDogMTAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMXB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzO1xuICAgIGFuaW1hdGlvbjogaGFuZGxlTmF2TGluayAycyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgfVxuICAubmF2X19saW5rOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDAsIDAsIDAuNjE1KTtcbiAgfVxuICBAa2V5ZnJhbWVzIGhhbmRsZU5hdkxpbmsge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgfVxuICAgIDUwJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICBvcGFjaXR5OiAwLjU7XG4gICAgICBmb250LXdlaWdodDogMTAwO1xuICAgIH1cbiAgfVxuICBAa2V5ZnJhbWVzIGhhbmRsZU5hdiB7XG4gICAgMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwcHgpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgfVxuICB9XG4gIC5idXJnZXItYnRuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5oZWFkZXJfX2hlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgfVxuICAuaGVhZGVyX190ZXh0IHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gIH1cbiAgLmhlYWRlcl9fYXJyb3cge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgfVxuICAuaGVyb19fdmlkZW8ge1xuICAgIGhlaWdodDogNDUwcHg7XG4gIH1cbiAgLm9mZmVyc19fbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5vZmZlcnNfX2Rlc2t0b3Age1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA3MHZoO1xuICB9XG4gIC5vZmZlcnNfX2NvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcbiAgfVxuICAub2ZmZXJzX19hc2lkZSB7XG4gICAgd2lkdGg6IDE1JTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzlEQTI5MjtcbiAgfVxuICAub2ZmZXJzX190aXRsZSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBjb2xvcjogI0ZBRjhGMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiA0MDBweDtcbiAgICByaWdodDogMzBweDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMTByZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBsZXR0ZXItc3BhY2luZzogNXB4O1xuICB9XG4gIC5vZmZlcnNfX2l0ZW0ge1xuICAgIHBhZGRpbmc6IDFlbSAxZW07XG4gIH1cbiAgQGtleWZyYW1lcyBoYW5kbGVPZmZlclRpdGxlIHtcbiAgICAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMDBweCkgcm90YXRlKC05MGRlZyk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKSByb3RhdGUoLTkwZGVnKTtcbiAgICB9XG4gIH1cbiAgLmFjdGl2ZU9mZmVyVGl0bGUge1xuICAgIGFuaW1hdGlvbjogaGFuZGxlT2ZmZXJUaXRsZSAxcyBlYXNlLWluLW91dCBmb3J3YXJkcztcbiAgfVxuICAucG9ydGZvbGlvX190aXRsZS0tZGVza3RvcCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAucG9ydGZvbGlvX19ib3hlcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDE3MHB4O1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMTcwcHg7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgfVxuICAucG9ydGZvbGlvX19ib3gtLWxlZnQge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbiAgLnBvcnRmb2xpb19fYm94LS1yaWdodCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHdpZHRoOiAyMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzlEQTI5MjtcbiAgfVxuICAucG9ydGZvbGlvX190ZXh0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICAucG9ydGZvbGlvX190aXRsZSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzAwcHgpO1xuICAgIGNvbG9yOiAjRkFGOEYwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDM1MHB4O1xuICAgIHJpZ2h0OiAtMTVweDtcbiAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxMnJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIH1cbiAgQGtleWZyYW1lcyBoYW5kbGVUaXRsZSB7XG4gICAgMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMDBweCkgcm90YXRlKC05MGRlZyk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKSByb3RhdGUoLTkwZGVnKTtcbiAgICB9XG4gIH1cbiAgLnBvcnRmb2xpbyAuYWN0aXZlVGl0bGUge1xuICAgIGFuaW1hdGlvbjogaGFuZGxlVGl0bGUgMXMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XG4gIH1cbiAgLnBvcnRmb2xpb19faW5mbyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgcGFkZGluZzogMC41ZW0gMWVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTAwcHgpIHtcbiAgLm5hdl9faXRlbSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5uYXZfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAuYWJvdXRfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDRyZW07XG4gIH1cbiAgLmFib3V0X19ib3gge1xuICAgIHdpZHRoOiA1NSU7XG4gIH1cbiAgLmFib3V0X19pbmZvIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgaGVpZ2h0OiA0NTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIC5hYm91dF9faW1nLWJveCB7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XG4gIH1cbiAgLmFib3V0X19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDRyZW07XG4gIH1cbiAgLm9mZmVyc19fdGl0bGUge1xuICAgIHRvcDogMzg1cHg7XG4gICAgcmlnaHQ6IDQwcHg7XG4gIH1cbiAgLnJ1bGVzX19oZWFkZXIge1xuICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgfVxuICAucnVsZXNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbiAgLnJ1bGVzX19pdGVtIHtcbiAgICBmb250LXNpemU6IDIuMnJlbTtcbiAgfVxuICAuYWNvcmRlb24ge1xuICAgIHdpZHRoOiA3NTBweDtcbiAgfVxuICAuYWNvcmRlb24tYnRuIHtcbiAgICB3aWR0aDogNzUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19fdmlkZW8ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDI4MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX2ltYWdlcy0taXRlbSB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMjgwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19fdGl0bGUge1xuICAgIHJpZ2h0OiAtMjBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGVyb19fdmlkZW8ge1xuICAgIGhlaWdodDogNTAwcHg7XG4gIH1cbiAgLmhlcm9fX3RleHQyIHtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19fdmlkZW8ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX2ltYWdlcy0taXRlbSB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19fdGl0bGUge1xuICAgIHJpZ2h0OiAtNDBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDExMDBweCkge1xuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMzUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiAzNTBweDtcbiAgfVxuICAub2ZmZXJzX190aXRsZSB7XG4gICAgdG9wOiAzNzVweDtcbiAgICByaWdodDogNTBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVhZGVyX19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDdyZW07XG4gIH1cbiAgLmhlYWRlcl9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG4gIC5oZWFkZXJfX2Fycm93IHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gIH1cbiAgLmhlYWRlcl9fYnRuIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmFib3V0X190aXRsZSB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgaGVpZ2h0OiA2MDBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIH1cbiAgLmFib3V0X19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbiAgLmFib3V0X190ZXh0IHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmhlcm9fX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDY1MHB4O1xuICB9XG4gIC5oZXJvX190ZXh0MiB7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICB9XG4gIC5vZmZlcnNfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICB9XG4gIC5vZmZlcnNfX3RpdGxlIHtcbiAgICB0b3A6IDM3MHB4O1xuICAgIHJpZ2h0OiA2MHB4O1xuICB9XG4gIC5ydWxlc19faGVhZGVyIHtcbiAgICBmb250LXNpemU6IDYuNXJlbTtcbiAgfVxuICAucnVsZXNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDUuNXJlbTtcbiAgfVxuICAucnVsZXNfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICB9XG4gIC5hY29yZGVvbiB7XG4gICAgd2lkdGg6IDgwMHB4O1xuICB9XG4gIC5hY29yZGVvbi1idG4ge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICAgIHdpZHRoOiA4MDBweDtcbiAgfVxuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMzUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiAzNTBweDtcbiAgfVxuICAucG9ydGZvbGlvX190aXRsZSB7XG4gICAgcmlnaHQ6IC02MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XG4gIC5uYXZfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICB9XG4gIC5uYXZfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICB9XG4gIC5vZmZlcnNfX3RpdGxlIHtcbiAgICB0b3A6IDMzMHB4O1xuICAgIHJpZ2h0OiA4MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMzUwcHg7XG4gICAgaGVpZ2h0OiA0NTBweDtcbiAgfVxuICAucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgICBoZWlnaHQ6IDQ1MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3RpdGxlIHtcbiAgICByaWdodDogLTEwMHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTgwMHB4KSB7XG4gIC5oZXJvX192aWRlbyB7XG4gICAgaGVpZ2h0OiA3MDBweDtcbiAgfVxuICAucnVsZXMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gIH1cbiAgLnJ1bGVzX19iYWNrIHtcbiAgICBtYXJnaW4tdG9wOiAyMDBweDtcbiAgfVxufSIsIi8vY29sb3JzIGV0Y1xyXG4kcHVyZS13aGl0ZTogI2ZmZjtcclxuJGxpZ2h0LXdoaXRlOiAjRjVFRkVEO1xyXG4kbGlnaHQtd2hpdGUtYnRuOiAjZGFkYWRhNDE7XHJcbiRsaWdodC1ncmVlbjojOURBMjkyO1xyXG4kZGFyazogIzJlMmUyZTtcclxuJG1haW4tY29sb3I6ICNhMThkNzk7XHJcbiRzZWNvbmQtY29sb3I6I0ZBRjhGMDtcclxuJHBpbmstY29sb3I6I0Y1REREQTtcclxuJGJ1dHRvbi1jb2xvci1ob3ZlcjogIzkyODA2ZjQ2O1xyXG5cclxuJGdyZXktZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgwLCAwLCAwLCAwLjUyNSksIHJnYigwLCAwLCAwKSk7XHJcbiRicm93bi1ncmFkaWVudC1zb2xpZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzljODk3NywgIzRiNDIzODlmKTtcclxuJGJyb3duLWdyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNiZmE4OTMyYiwgI2ZmZmZmZjAwKTtcclxuJGJyb3duLWdyYWRpZW50LWZhcTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjYmZhODkzMjIsI2JmYTg5MzMxKTtcclxuJGdyZXktZ3JhZGllbnQtc29saWQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiKDAsIDAsIDApLCByZ2IoMCwgMCwgMCkpOyIsIi8vYmFzZSBzdHlsZSBtaW4gd2lkdGhcclxuQHVzZSAnLi4vdmFyaWFibGVzJyBhcyAqO1xyXG5cclxuXHJcbi5idXJnZXItYnRuIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMTBweDtcclxuICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG4gICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuXHJcblxyXG5cclxuICAgICY6Zm9jdXMge1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAuNSk7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYmFycyxcclxuICAgICZfX2JhcnM6OmFmdGVyLFxyXG4gICAgJl9fYmFyczo6YmVmb3JlIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHB1cmUtd2hpdGU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggLjNzO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2JhcnMge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB0b3A6IDEzcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgdG9wOiAyN3B4O1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uLWRlbGF5OiAuMXM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5ibGFjay1iYXJzLWNvbG9yLFxyXG4gICAgLmJsYWNrLWJhcnMtY29sb3I6OmFmdGVyLFxyXG4gICAgLmJsYWNrLWJhcnMtY29sb3I6OmJlZm9yZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRhcms7XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG4uYnVyZ2VyLWFjdGl2ZSB7XHJcbiAgICAuYnVyZ2VyLWJ0bl9fYmFyczo6YWZ0ZXIge1xyXG4gICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICB9XHJcblxyXG4gICAgLmJ1cmdlci1idG5fX2JhcnM6OmJlZm9yZSB7XHJcbiAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgIH1cclxufVxyXG5cclxuLm5hdiB7XHJcbiAgICAmX19kZXNrdG9wIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgICZfX21vYmlsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIHotaW5kZXg6IDk5OTtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAwLCAwLCAwLjY2OCk7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDQwcHggMCAwIDQwcHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDJzO1xyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbXMge1xyXG4gICAgICAgICYtLW1vYmlsZSB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNzAlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgJi0tbW9iaWxlIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkxlYWd1ZSBTcGFydGFuXCIsIHNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogLTFweDtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBjb2xvcjogJHB1cmUtd2hpdGU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS43cmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcztcclxuXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAwLCAwLCAwLjYxNSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbi5uYXZBY3RpdmUge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuXHJcblxyXG5cclxuXHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAkZ3JleS1ncmFkaWVudC1zb2xpZDtcclxuXHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBvcGFjaXR5OiAwLjQ7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJMaW5kZW4gSGlsbFwiLCBzZXJpZjtcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcblxyXG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgICAgICAgY29sb3I6ICRzZWNvbmQtY29sb3I7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVTaG93IDJzIGVhc2UtaW4tb3V0O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMTBweDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGNvbG9yOiAkc2Vjb25kLWNvbG9yO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVlbTtcclxuICAgICAgICBhbmltYXRpb246IGhhbmRsZVNob3dEb3duIDJzIGVhc2UtaW4tb3V0IDFzIGZvcndhcmRzO1xyXG4gICAgICAgIC8vIGFuaW1hdGlvbjogbmFtZSBkdXJhdGlvbiB0aW1pbmctZnVuY3Rpb24gZGVsYXkgaXRlcmF0aW9uLWNvdW50IGRpcmVjdGlvbiBmaWxsLW1vZGU7XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2J0biB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgICAgIGNvbG9yOiAkbGlnaHQtd2hpdGU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgcGFkZGluZzogMC42ZW0gMS4yZW07XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJG1haW4tY29sb3I7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXM7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVTaG93T3BhY2l0eSAzcyBlYXNlLWluLW91dCAycyBmb3J3YXJkcztcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tY29sb3ItaG92ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2Fycm93IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiA1cHg7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LXdoaXRlO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtMThweDtcclxuXHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4vL2hlYWRlciBhbmltYXRpb25zXHJcblxyXG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3cge1xyXG4gICAgMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDcwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3dEb3duIHtcclxuICAgIDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3dPcGFjaXR5IHtcclxuICAgIDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAxMDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG5cclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5cclxuLmFib3V0IHtcclxuXHJcblxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB3aWR0aDogMjYwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC41ZW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogM3M7XHJcbiAgICAgICAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC4yKTtcclxuXHJcbiAgICAgICAgJi1ib3gge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiRG9zaXNcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjhyZW07XHJcbiAgICAgICAgcGFkZGluZzogMWVtIDFlbTtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmFjdGl2ZUFuaW1hdGlvbiB7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVTaG93IDJzIGVhc2UtaW4tb3V0IGZvcndhcmRzO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbi5hY3RpdmVWaWRlbyB7XHJcbiAgICBhbmltYXRpb246IGhhbmRsZVNob3cgMS41cyBlYXNlLWluLW91dCBmb3J3YXJkcztcclxuXHJcbn1cclxuXHJcbi5oZXJvIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMWVtIDFlbTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6ICRicm93bi1ncmFkaWVudDtcclxuICAgIGhlaWdodDogMTMwdmg7XHJcblxyXG4gICAgJl9fdmlkZW8ge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG5cclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCByZ2JhKCRjb2xvcjogIzJlMmUyZTJlLCAkYWxwaGE6IDAuNSk7XHJcblxyXG4gICAgICAgICYtLXNlY29uZCB7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogLjVzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuLm9mZmVycyB7XHJcblxyXG4gICAgJl9fZGVza3RvcCB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fYm94IHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAkbWFpbi1jb2xvcjtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJG1haW4tY29sb3I7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGlzdCB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjogMC41ZW0gMDtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG5cclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6ICRsaWdodC1ncmVlbjtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJEb3Npc1wiLCBzZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuXHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4ucnVsZXMge1xyXG4gICAgei1pbmRleDogMjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi9kaXN0L2ltZy9oZWFkZXJfaW1nLmpwZyk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgJl9fbGlzdCB7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMTk0LCAxOTMsIDE5MywgMC41NDgpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgJl9faGVybyB7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Mik7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAzMDB2aDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgJl9faGVhZGVyIHtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LXdoaXRlO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC1zaXplOiA0LjVyZW07XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAwO1xyXG4gICAgICAgIGFuaW1hdGlvbjogaGFuZGxlU2hvdyAycyBlYXNlLWluLW91dCBmb3J3YXJkcztcclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LXdoaXRlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IDNyZW07XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAuNWVtO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2JveGVzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVtcyB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZzogMWVtIDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgY29sb3I6ICRsaWdodC13aGl0ZTtcclxuICAgICAgICBmb250LWZhbWlseTogXCJEb3Npc1wiLCBzZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgICAgIHBhZGRpbmc6IC4yZW0gMDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fYmFjayB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LXdoaXRlO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fZmFxIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyZW07XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hY29yZGVvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBib3gtc2hhZG93OiA1cHggNXB4IDIwcHggcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XHJcblxyXG5cclxuICAgICYtYm94IHtcclxuICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcclxuICAgICAgICBmb250LWZhbWlseTogXCJEb3Npc1wiLCBzZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuXHJcbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuXHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgICYtYnRuIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgICAgIGNvbG9yOiAkcHVyZS13aGl0ZTtcclxuICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XHJcblxyXG4gICAgICAgIC8vIFxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJi1pbmZvIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuXHJcbiAgICAgICAgJi10ZXh0IHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBjb2xvcjogJGxpZ2h0LXdoaXRlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIDFlbTtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRwdXJlLXdoaXRlO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLmFjdGl2ZUFjb3JkZW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbi5wb3J0Zm9saW8ge1xyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICAmLS1kZXNrdG9wIHtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBub25lO1xyXG4gICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBoZWlnaHQ6IDI4MHB4O1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgJl9faW1hZ2VzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMmVtO1xyXG5cclxuXHJcbiAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyODBweDtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCByZ2JhKCRjb2xvcjogIzJlMmUyZTJlLCAkYWxwaGE6IDAuMik7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgLjRzLCB0cmFuc2Zvcm0gLjRzO1xyXG5cclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiA4cHggOHB4IDEzcHggcmdiYSgkY29sb3I6ICMyZTJlMmUyZSwgJGFscGhhOiAwLjMpO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fdmlkZW8ge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC41KTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICAmX19ib3gge1xyXG5cclxuXHJcblxyXG4gICAgICAgICYtLWxlZnQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1yaWdodCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICAmX19tb3JlIHtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LWdyZWVuO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbiAgICAgICAgJi0tYm94IHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLXRleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuM3JlbTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2luc3RhZ3JhbSB7XHJcblxyXG4gICAgICAgIGZvbnQtc2l6ZTogOXJlbTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4ucmV2aWV3IHtcclxuICAgIGhlaWdodDogODB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVyZS13aGl0ZTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19pbWcge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgei1pbmRleDogMTAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IC0zMDBweDtcclxuICAgICAgICBsZWZ0OiAtMTAwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICB3aWR0aDogMzAwcHg7XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAuYWN0aXZlUmV2aWV3SW1nIHtcclxuICAgICAgICBhbmltYXRpb246IGhhbmRsZVNob3dSZXZpZXdJbWcgMnMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XHJcbiAgICB9XHJcblxyXG4gICAgQGtleWZyYW1lcyBoYW5kbGVTaG93UmV2aWV3SW1nIHtcclxuICAgICAgICAwJSB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAxMDAlIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2FzaWRlIHtcclxuXHJcbiAgICAgICAgd2lkdGg6IDIwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0LWdyZWVuO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgY29sb3I6ICRzZWNvbmQtY29sb3I7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICBmb250LXNpemU6IDEycmVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBoZWlnaHQ6IDkwJTtcclxuICAgICAgICB3aWR0aDogOTUlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwaW5rLWNvbG9yO1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbSAyZW07XHJcbiAgICB9XHJcblxyXG5cclxuICAgICZfX2luc3RhZ3JhbSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjNyZW07XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGJvdHRvbTogNTBweDtcclxuICAgICAgICByaWdodDogNTBweDtcclxuICAgICAgICBmb250LWZhbWlseTogXCJMaW5kZW4gSGlsbFwiLCBzZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZzogLjJlbSAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG5cclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICB3aWR0aDogMjAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDIwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgQGtleWZyYW1lcyBidG5BbmltYXRpb24ge1xyXG4gICAgICAgIDAlIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIDUwJSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIDEwMCUge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIG1hcmdpbjogMCAxZW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzLCBib3gtc2hhZG93IDFzO1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogOHB4IDhweCAxM3B4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC4zKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fb3BpbmlvbiB7XHJcblxyXG4gICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHB1cmUtd2hpdGU7XHJcblxyXG5cclxuICAgICAgICBib3gtc2hhZG93OiA1cHggNXB4IDVweCByZ2JhKCRjb2xvcjogIzJlMmUyZTJlLCAkYWxwaGE6IDAuMik7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19pbmZvIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9faGVhZGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTGluZGVuIEhpbGxcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDNlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19zbGljayB7XHJcbiAgICAgICAgY29sb3I6ICRwdXJlLXdoaXRlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbn0iLCIvL2NvbXBvbmVudHNcclxuQHVzZSAnLi92YXJpYWJsZXMnIGFzICo7XHJcblxyXG4ud3JhcHBlcntcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDE3MDBweDtcclxufVxyXG4uc2VjdGlvbi1oZWFkaW5nIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBjb2xvcjogJG1haW4tY29sb3I7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG5cclxuXHJcbiAgICAmLS1yaWdodCB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICB9XHJcbn1cclxuIiwiLy8tLTM5MC0tLy9cclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMzkwcHgpIHtcclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMTUwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjMwcHg7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcblxyXG4gICAgICAgICAgICAmLS1pdGVtIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMjAwcHg7XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuLy8tLTQzMC0tLy9cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA0MzBweCkge1xyXG4gICAgLnBvcnRmb2xpbyB7XHJcblxyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyNTBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcblxyXG5cclxuXHJcbn0iLCIgLy8gQG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XHJcbiAvLyAgICAgLyogU3R5bGl6YWNqZSBkbGEgdGVsZWZvbsOzdyBvIHdpxJlrc3p5Y2ggZWtyYW5hY2ggKi9cclxuIC8vIH1cclxuIC8vIEBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xyXG4gLy8gICAgIC8qIFN0eWxpemFjamUgZGxhIHdpxJlrc3p5Y2ggdGVsZWZvbsOzdyAqL1xyXG4gLy8gfVxyXG5cclxuIEB1c2UgJy4uL3ZhcmlhYmxlcycgYXMgKjtcclxuXHJcblxyXG4gQG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XHJcblxyXG4gICAgIC5uYXYge1xyXG4gICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgICYtLW1vYmlsZSB7XHJcbiAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19saW5rIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLmhlYWRlciB7XHJcbiAgICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiA0cmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuXHJcblxyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19hcnJvdyB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgICAgICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG5cclxuXHJcbiAgICAgICAgIH1cclxuXHJcblxyXG4gICAgIH1cclxuXHJcbiAgICAgLmFib3V0IHtcclxuICAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgIC5oZXJvIHtcclxuICAgICAgICAgaGVpZ2h0OiAxNDB2aDtcclxuXHJcbiAgICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgIGhlaWdodDogNDUwcHg7XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgIC5vZmZlcnMge1xyXG4gICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgIH1cclxuXHJcbiAgICAgLnJ1bGVzIHtcclxuXHJcblxyXG4gICAgICAgICAmX19oZWFkZXIge1xyXG5cclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcclxuXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX3RpdGxlIHtcclxuXHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuXHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgIC5hY29yZGVvbiB7XHJcbiAgICAgICAgIHdpZHRoOiA0MDBweDtcclxuXHJcbiAgICAgICAgICYtYnRuIHtcclxuICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLnBvcnRmb2xpbyB7XHJcbiAgICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgIHdpZHRoOiAxNzBweDtcclxuICAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gfVxyXG5cclxuXHJcblxyXG4gQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XHJcblxyXG4gICAgIC5oZWFkZXIge1xyXG4gICAgICAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogNC41cmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xyXG5cclxuXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX2Fycm93IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xyXG4gICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcblxyXG5cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9fYnRuIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS43cmVtO1xyXG5cclxuICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgfVxyXG5cclxuICAgICAuYWJvdXQge1xyXG4gICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICAgICAgIGhlaWdodDogNDUwcHg7XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAzLjVyZW07XHJcblxyXG4gICAgICAgICB9XHJcblxyXG4gICAgIH1cclxuXHJcbiAgICAgLmhlcm8ge1xyXG4gICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAgJl9fdGV4dDIge1xyXG4gICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgcmlnaHQ6IDUwJTtcclxuICAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNTAlLCAtNTAlKTtcclxuXHJcblxyXG4gICAgICAgICB9XHJcblxyXG5cclxuICAgICB9XHJcblxyXG4gICAgIC5vZmZlcnMge1xyXG4gICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuICAgICAgICAgfVxyXG5cclxuICAgICB9XHJcblxyXG4gICAgIC5hY29yZGVvbiB7XHJcbiAgICAgICAgIHdpZHRoOiA1MDBweDtcclxuXHJcbiAgICAgICAgICYtYnRuIHtcclxuICAgICAgICAgICAgIHdpZHRoOiA1MDBweDtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcblxyXG4gICAgIC5wb3J0Zm9saW8ge1xyXG5cclxuICAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICAgaGVpZ2h0OiAyODBweDtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICAmLS1pdGVtIHtcclxuICAgICAgICAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyODBweDtcclxuXHJcbiAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuIH1cclxuXHJcblxyXG4gLy8tLTY3MC0tLy9cclxuXHJcbiBAbWVkaWEgKG1pbi13aWR0aDogNjcwcHgpIHtcclxuXHJcbiAgICAgICAgLm5hdiB7XHJcbiAgICAgICAgICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgICAgICAgICAmLS1tb2JpbGUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIuMXJlbTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAmX19saW5rIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIuMXJlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgIC5oZXJvIHtcclxuICAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLm9mZmVycyB7XHJcbiAgICAgICAgICZfX3ZpZGVvIHtcclxuXHJcbiAgICAgICAgICAgICBoZWlnaHQ6IDgwcHg7XHJcbiAgICAgICAgICAgICB0b3A6IDI2NXB4O1xyXG4gICAgICAgICAgICAgbGVmdDogMTBweDtcclxuICAgICAgICAgfVxyXG5cclxuICAgICB9XHJcblxyXG4gICAgIC5ydWxlcyB7XHJcblxyXG5cclxuICAgICAgICAgJl9faGVhZGVyIHtcclxuXHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDUuNXJlbTtcclxuXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX3RpdGxlIHtcclxuXHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDRyZW07XHJcblxyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19pdGVtIHtcclxuXHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG5cclxuXHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgIC5hY29yZGVvbiB7XHJcbiAgICAgICAgIHdpZHRoOiA2MDBweDtcclxuXHJcbiAgICAgICAgICYtYnRuIHtcclxuICAgICAgICAgICAgIHdpZHRoOiA2MDBweDtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmLWluZm8ge1xyXG5cclxuXHJcbiAgICAgICAgICAgICAmLXRleHQge1xyXG4gICAgICAgICAgICAgICAgIGNvbG9yOiAkbGlnaHQtd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG5cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLnBvcnRmb2xpbyB7XHJcblxyXG4gICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgICB3aWR0aDogMTcwcHg7XHJcbiAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19pbWFnZXMge1xyXG5cclxuICAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgIHdpZHRoOiAxNzBweDtcclxuICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG5cclxuICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcbiB9IiwiLy8gQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbi8vICAgICAvKiBTdHlsaXphY2plIGRsYSB0YWJsZXTDs3cgKi9cclxuLy8gfVxyXG4vLyBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuLy8gICAgIC8qIFN0eWxpemFjamUgZGxhIHdpxJlrc3p5Y2ggdGFibGV0w7N3IGkgbWHFgnljaCBsYXB0b3DDs3cgKi9cclxuLy8gfVxyXG5cclxuQHVzZSAnLi4vdmFyaWFibGVzJyBhcyAqO1xyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcblxyXG4gICAgaHRtbCB7XHJcbiAgICAgICAgc2Nyb2xsLXBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5uYXYge1xyXG4gICAgICAgICZfX21vYmlsZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19kZXNrdG9wIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA5OTk7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDAsIDAsIDAuNjY4KTtcclxuICAgICAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVOYXYgMnMgMXMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgICAgICZfX2l0ZW1zIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faXRlbSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiTGVhZ3VlIFNwYXJ0YW5cIiwgc2VyaWY7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAtMXB4O1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkcHVyZS13aGl0ZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjdyZW07XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXM7XHJcblxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMiwgMCwgMCwgMC42MTUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGluayB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiTGVhZ3VlIFNwYXJ0YW5cIiwgc2VyaWY7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAtMXB4O1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkcHVyZS13aGl0ZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjdyZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzO1xyXG4gICAgICAgICAgICBhbmltYXRpb246IGhhbmRsZU5hdkxpbmsgMnMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMiwgMCwgMCwgMC42MTUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgQGtleWZyYW1lcyBoYW5kbGVOYXZMaW5rIHtcclxuICAgICAgICAwJSB7XHJcblxyXG4gICAgICAgICAgICBvcGFjaXR5OiAuNTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcclxuXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgNTAlIHtcclxuXHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgMTAwJSB7XHJcblxyXG4gICAgICAgICAgICBvcGFjaXR5OiAuNTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgQGtleWZyYW1lcyBoYW5kbGVOYXYge1xyXG4gICAgICAgIDAlIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDBweCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAxMDAlIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmJ1cmdlci1idG4ge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2Fycm93IHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAuaGVybyB7XHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQ1MHB4O1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm9mZmVycyB7XHJcblxyXG5cclxuXHJcbiAgICAgICAgJl9fbW9iaWxlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2Rlc2t0b3Age1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDcwdmg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9fY29udGFpbmVyIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2FzaWRlIHtcclxuXHJcbiAgICAgICAgICAgIHdpZHRoOiAxNSU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0LWdyZWVuO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgY29sb3I6ICRzZWNvbmQtY29sb3I7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgdG9wOiA0MDBweDtcclxuICAgICAgICAgICAgcmlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMHJlbTtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHJcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiA1cHg7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faXRlbSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAxZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIGhhbmRsZU9mZmVyVGl0bGUge1xyXG5cclxuICAgICAgICAwJSB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzAwcHgpIHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgMTAwJSB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKXJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmFjdGl2ZU9mZmVyVGl0bGUge1xyXG4gICAgICAgIGFuaW1hdGlvbjogaGFuZGxlT2ZmZXJUaXRsZSAxcyBlYXNlLWluLW91dCBmb3J3YXJkcztcclxuICAgIH1cclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICAmLS1kZXNrdG9wIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMTcwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pbWFnZXMge1xyXG5cclxuICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTcwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2JveCB7XHJcblxyXG4gICAgICAgICAgICAmLS1sZWZ0IHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtLXJpZ2h0IHtcclxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwJTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodC1ncmVlbjtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMwMHB4KTtcclxuICAgICAgICAgICAgY29sb3I6ICRzZWNvbmQtY29sb3I7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgdG9wOiAzNTBweDtcclxuICAgICAgICAgICAgcmlnaHQ6IC0xNXB4O1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEycmVtO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG5cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAa2V5ZnJhbWVzIGhhbmRsZVRpdGxlIHtcclxuICAgICAgICAgICAgMCUge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMDBweCkgcm90YXRlKC05MGRlZyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIDEwMCUge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKXJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYWN0aXZlVGl0bGUge1xyXG4gICAgICAgICAgICBhbmltYXRpb246IGhhbmRsZVRpdGxlIDFzIGVhc2UtaW4tb3V0IGZvcndhcmRzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW5mbyB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vLS05MDAtLS8vXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTAwcHgpIHtcclxuXHJcbiAgICAubmF2IHtcclxuICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGluayB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmFib3V0IHtcclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDRyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICB3aWR0aDogNTUlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW5mbyB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQ1MHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG5cclxuICAgICAgICAgICAgJi1ib3gge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDRyZW07XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAub2ZmZXJzIHtcclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICB0b3A6IDM4NXB4O1xyXG4gICAgICAgICAgICByaWdodDogNDBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5ydWxlcyB7XHJcblxyXG5cclxuICAgICAgICAmX19oZWFkZXIge1xyXG5cclxuICAgICAgICAgICAgZm9udC1zaXplOiA2cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pdGVtIHtcclxuXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xyXG5cclxuXHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYWNvcmRlb24ge1xyXG4gICAgICAgIHdpZHRoOiA3NTBweDtcclxuXHJcbiAgICAgICAgJi1ib3gge31cclxuXHJcbiAgICAgICAgJi1idG4ge1xyXG4gICAgICAgICAgICB3aWR0aDogNzUwcHg7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLnBvcnRmb2xpbyB7XHJcblxyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI4MHB4O1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICZfX2ltYWdlcyB7XHJcblxyXG4gICAgICAgICAgICAmLS1pdGVtIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMjgwcHg7XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICByaWdodDogLTIwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGggOiA5OTJweCkge31cclxuXHJcblxyXG5cclxuLy8tLTEwMjQtLS8vXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAuaGVybyB7XHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgICAgIH1cclxuXHJcblxyXG5cclxuICAgICAgICAmX190ZXh0MiB7XHJcblxyXG4gICAgICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzMDBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtNDBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIvLyBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbi8vICAgICAvKiBTdHlsaXphY2plIGRsYSB3acSZa3N6eWNoIGxhcHRvcMOzdyBpIG1vbml0b3LDs3cgZGVza3RvcG93eWNoICovXHJcbi8vIH1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxMTAwcHgpIHtcclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMzUwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzNTBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAub2ZmZXJzIHtcclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIHRvcDogMzc1cHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA1MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogN3JlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2Fycm93IHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2J0biB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmFib3V0IHtcclxuXHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA1cmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDYwMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLmhlcm8ge1xyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA2NTBweDtcclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICAgICAgJl9fdGV4dDIge1xyXG5cclxuICAgICAgICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTBweDtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5vZmZlcnMge1xyXG5cclxuICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjNyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIHRvcDogMzcwcHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA2MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucnVsZXMge1xyXG5cclxuXHJcbiAgICAgICAgJl9faGVhZGVyIHtcclxuXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNi41cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNS41cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2l0ZW0ge1xyXG5cclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjNyZW07XHJcblxyXG5cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5hY29yZGVvbiB7XHJcbiAgICAgICAgd2lkdGg6IDgwMHB4O1xyXG5cclxuICAgICAgICAmLWJ0biB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xyXG4gICAgICAgICAgICB3aWR0aDogODAwcHg7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMzUwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzNTBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICByaWdodDogLTYwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxufSIsIi8vID4xMjAwcHhcclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XHJcblxyXG4gICAgLm5hdntcclxuICAgICAgICAmX19saW5re1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuM3JlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2l0ZW17XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAub2ZmZXJzIHtcclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICB0b3A6IDMzMHB4O1xyXG4gICAgICAgICAgICByaWdodDogODBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnBvcnRmb2xpbyB7XHJcblxyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgd2lkdGg6IDM1MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQ1MHB4O1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICZfX2ltYWdlcyB7XHJcblxyXG4gICAgICAgICAgICAmLS1pdGVtIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAzNTBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNDUwcHg7XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgcmlnaHQ6IC0xMDBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxODAwcHgpIHtcclxuXHJcbiAgICAuaGVybyB7XHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDcwMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucnVsZXMge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwdmg7XHJcblxyXG4gICAgICAgICZfX2JhY2sge1xyXG5cclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSJdfQ== */
