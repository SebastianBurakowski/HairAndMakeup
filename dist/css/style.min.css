*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-family:Dosis,serif;font-weight:lighter;font-size:62.5%;scroll-behavior:smooth}body{position:relative;background-color:#faf8f0;font-size:1.6rem}.burger-btn{position:fixed;top:10px;right:10px;padding:1em;background:none;border:1px solid transparent;cursor:pointer;z-index:1000}.burger-btn:hover .burger-btn__bars:after{width:60%}.burger-btn:hover .burger-btn__bars:before{width:30%}.burger-btn:focus{outline:none;border:1px solid hsla(0,0%,100%,.5);border-radius:8px}.burger-btn__box{position:relative;width:40px;height:30px}.burger-btn__bars,.burger-btn__bars:after,.burger-btn__bars:before{position:absolute;right:0;content:"";height:3px;background-color:#fff;transition:width .3s}.burger-btn__bars{width:100%}.burger-btn__bars:after{width:100%;top:13px}.burger-btn__bars:before{width:100%;top:27px;transition-delay:.1s}.burger-btn .black-bars-color,.burger-btn .black-bars-color:after,.burger-btn .black-bars-color:before{background-color:#2e2e2e}.nav{display:none}.header{z-index:100;overflow:hidden;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;width:100%;height:100vh;background-image:linear-gradient(45deg,#000,#000)}.header__video{background-color:#000;position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;opacity:.4;z-index:-1}.header__heading{font-family:Linden Hill,serif;font-style:italic;font-weight:lighter;font-size:3rem;padding:.5em 0;color:#faf8f0;animation:a 2s ease-in-out}.header__text{font-weight:lighter;letter-spacing:10px;color:#faf8f0;margin-bottom:5em;animation:b 2s ease-in-out 1s forwards}.header__btn,.header__text{opacity:0;font-family:Playfair Display,serif;font-size:1.5rem;text-transform:uppercase}.header__btn{letter-spacing:1px;width:150px;color:#f5efed;background-color:transparent;padding:.6em 1.2em;text-decoration:none;border:1px solid #a18d79;border-radius:6px;transition:background-color 1s;animation:c 3s ease-in-out 2s forwards}.header__btn:hover{background-color:hsla(29,14%,50%,.2745098039)}.header__arrow{position:absolute;bottom:5px;left:50%;transform:translate(-50%,-50%);font-size:2rem;color:#f5efed;margin-left:-18px}@keyframes a{0%{opacity:0;transform:translateY(70%)}to{opacity:1;transform:translateY(0)}}@keyframes b{0%{opacity:0;transform:translateY(-200%)}to{opacity:1;transform:translateY(0)}}.about__info{display:flex;justify-content:center;align-items:center;flex-direction:column}.about__img{position:relative;opacity:0;width:260px;height:400px;border:none;border-radius:8px;margin-bottom:.5em;transition:3s;box-shadow:5px 5px 10px rgba(46,46,46,.2)}.about__img-box{display:flex;justify-content:center;align-items:center;background-color:transparent;width:40%}.about__heading{font-family:Linden Hill,serif;font-size:3rem;padding:.5em 1em}.about__heading,.about__text{font-weight:lighter;opacity:0;text-align:center}.about__text{font-family:Dosis,serif;letter-spacing:1px;font-size:1.8rem;padding:1em;padding-top:0}.about .activeAnimation{animation:a 2s ease-in-out forwards}.activeVideo{animation:a 1.5s ease-in-out forwards}.hero{position:relative;display:flex;justify-content:space-evenly;flex-direction:column;align-items:center;padding:1em;background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0));height:130vh}.hero__video{opacity:0;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.hero__video--second{animation-delay:.5s}.offers__desktop{display:none}.offers__box,.offers__title{padding:.5em 1em}.offers__box{position:relative;display:flex;justify-content:center;align-items:center;border-top:2px solid #a18d79;border-bottom:2px solid #a18d79}.offers__list{text-align:center;margin:.5em 0;list-style:none}.offers__list a{font-weight:700;text-decoration:none;color:#9da292;cursor:pointer}.offers__item{font-family:Dosis,serif;font-weight:lighter;font-size:1.8rem;padding:.5em 1em;border-bottom:1px solid #000;letter-spacing:1px}.rules{z-index:2;position:relative;background-image:url(../../../dist/img/header_img.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;overflow:hidden}.rules__list{border-bottom:1px solid hsla(0,1%,76%,.548)}.rules__hero{z-index:-1;position:absolute;top:0;left:0;background-color:rgba(0,0,0,.82);width:100%;height:300vh}.rules__header{opacity:0;font-size:4.5rem;padding:.5em 0;animation:a 2s ease-in-out forwards}.rules__header,.rules__title{color:#f5efed;font-family:Playfair Display,serif;text-align:center}.rules__title{font-weight:lighter;font-size:3rem;padding:.5em}.rules__boxes{display:flex;justify-content:center;align-items:center;flex-direction:column}.rules__items{text-align:center;list-style:none;padding:1em 0}.rules__item{font-family:Dosis,serif;font-weight:lighter;font-size:1.8rem;padding:.2em 0}.rules__back,.rules__item{color:#f5efed;letter-spacing:1px}.rules__back{font-family:Playfair Display,serif;display:block;margin-top:50px;font-size:2.2rem;font-weight:700;padding:.5em 1em;text-decoration:none}.rules__faq{margin-top:2em;padding:.5em 1em}.acordeon{background-color:transparent;display:flex;justify-content:space-around;align-items:center;flex-direction:column;border-radius:50px;padding-bottom:0;width:100%;height:100%;border:1px solid hsla(0,1%,76%,.548);overflow:hidden;box-shadow:5px 5px 20px hsla(0,1%,76%,.548)}.acordeon-box{font-size:1.8rem;font-family:Dosis,serif;font-weight:lighter;letter-spacing:1px;margin-bottom:1em}.acordeon-box:last-child{margin-bottom:0}.acordeon-btn{font-family:Playfair Display,serif;font-weight:lighter;color:#fff;font-size:2rem;padding:.5em 1em;cursor:pointer;background-color:transparent;border:none;border-bottom:1px solid hsla(0,1%,76%,.548)}.acordeon-info{display:none}.acordeon-info-text{text-align:center;color:#f5efed;font-size:1.8rem;padding:1em;border-bottom:1px solid #fff;border-radius:5px}.activeAcordeon{display:flex}.portfolio__title--desktop{padding:.5em 1em}.portfolio__video{animation:none;width:200px;height:280px}.portfolio__images{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:1em 2em}.portfolio__images--item{display:block;margin-bottom:1em;width:200px;height:280px;border:none;border-radius:8px;box-shadow:5px 5px 10px rgba(46,46,46,.2);transition:box-shadow .4s,transform .4s}.portfolio__images--item:hover{box-shadow:8px 8px 13px rgba(46,46,46,.3);transform:scale(1.01)}.portfolio__video{opacity:1;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.portfolio__box--left{display:flex;justify-content:center;align-items:center}.portfolio__box--right{display:none}.portfolio__more{color:#9da292;text-decoration:none}.portfolio__more--box{height:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__more--text{font-size:2.3rem}.portfolio__instagram{font-size:9rem}.review{height:80vh;justify-content:space-between}.review,.review__container{display:flex;align-items:center}.review__container{position:relative;justify-content:center;background-color:#fff;height:100%;width:70%;margin-right:2em}.review__img{opacity:0;z-index:100;position:absolute;bottom:-300px;left:-100px;height:400px;width:300px}.review .activeReviewImg{animation:c 2s ease-in-out forwards}@keyframes c{0%{opacity:0}to{opacity:1}}.review__aside{width:20%;height:100%;background-color:#9da292}.review__title{color:#faf8f0;position:relative;top:50%;right:20px;font-family:Playfair Display,serif;font-weight:400;font-size:12rem;text-transform:uppercase;letter-spacing:2px;transform:rotate(-90deg)}.review__boxes{position:relative;display:flex;justify-content:space-around;align-items:center;height:90%;width:95%;background-color:#f5ddda;padding:1em 2em}.review__instagram{position:relative;display:block;text-decoration:none;color:#000;font-size:2.3rem;position:absolute;bottom:50px;right:50px;font-family:Linden Hill,serif;font-weight:lighter;border:none;padding:.2em 0;background-color:transparent}.review__instagram:after{bottom:0}.review__instagram:after,.review__instagram:before{content:"";position:absolute;left:50%;width:20%;height:1px;background-color:#000;transform:translateX(-50%)}.review__instagram:before{top:0}.review__link{display:block;text-align:center;color:#000;text-decoration:none;margin:0 1em;transition:transform 1s,box-shadow 1s}.review__link:hover{box-shadow:8px 8px 13px rgba(46,46,46,.3);transform:scale(1.01)}.review__opinion{height:250px;background-color:#fff;box-shadow:5px 5px 5px rgba(46,46,46,.2);border:none}.review__info{height:100%;position:relative;display:flex;justify-content:center;align-items:center}.review__header{position:absolute;top:0;left:0;padding:.5em 1em;font-family:Linden Hill,serif;font-size:3rem;border-bottom:1px solid hsla(0,1%,76%,.548)}.review__text{padding:.5em 1em;font-size:2rem;margin-top:3em}.review__slick{color:#fff;background-color:transparent;border:none;font-size:3.5rem;cursor:pointer}.wrapper{margin:0 auto;width:100%;max-width:1700px}.section-heading{font-family:Linden Hill,serif;text-align:left;font-weight:400;font-size:2.5rem;text-transform:uppercase;color:#a18d79;letter-spacing:2px}.section-heading--right{text-align:right}@media (min-width:390px){.portfolio__video{width:150px;height:230px}.portfolio__images{flex-direction:row;justify-content:space-between;flex-wrap:wrap}.portfolio__images--item{width:150px;height:200px}}@media (min-width:430px){.portfolio__images--item,.portfolio__video{width:170px;height:250px}}@media (min-width:480px){.header__heading{font-size:4rem}.header__text{font-size:2rem}.header__arrow{font-size:2.5rem;left:50%;transform:translate(-50%,-50%)}.about__text{font-size:2rem}.hero{height:140vh}.hero__video{height:450px}.offers__item{font-size:2rem}.rules__header{font-size:5rem}.rules__title{font-size:3.5rem}.acordeon,.acordeon-btn{width:400px}.portfolio__video{width:170px;height:250px}}@media (min-width:576px){.header__heading{font-size:4.5rem}.header__arrow,.header__text{font-size:2.5rem}.header__arrow{left:50%;transform:translate(-50%,-50%)}.header__btn{font-size:1.7rem}.about__title{font-size:3.5rem}.about__img{width:300px;height:450px}.about__heading{font-size:3.5rem}.hero{height:100%;flex-direction:row}.hero__video{height:350px}.hero__text2{position:absolute;right:50%;top:50%;transform:translate(50%,-50%)}.offers__title{font-size:3.5rem}.acordeon,.acordeon-btn{width:500px}.portfolio__images--item,.portfolio__video{width:200px;height:280px}}@media (min-width:670px){.hero__video{height:400px}.offers__video{height:80px;top:265px;left:10px}.rules__header{font-size:5.5rem}.rules__title{font-size:4rem}.rules__item{font-size:2rem;letter-spacing:1px}.acordeon{width:600px}.acordeon-btn{width:600px;font-size:2.2rem}.acordeon-info-text{color:#f5efed;font-size:2rem}.portfolio__images--item,.portfolio__video{width:170px;height:250px}}@media (min-width:768px){.nav{opacity:0;display:block;z-index:999;position:fixed;width:100%;top:0;left:0;background-color:rgba(2,0,0,.568);animation:d 2s 1s ease-in-out forwards}.nav__items{display:flex;justify-content:flex-start}.nav__item{display:block;font-family:League Spartan,serif;font-weight:100;letter-spacing:-2px;text-decoration:none;text-transform:uppercase;color:#fff;font-size:2.3rem;padding:.5em 2em;transition:background-color 1s}.nav__item:hover{background-color:rgba(2,0,0,.615)}@keyframes d{0%{opacity:0;transform:translateY(-100px)}to{opacity:1;transform:translateY(0)}}.burger-btn{display:none}.header__heading{font-size:6rem}.header__arrow,.header__text{font-size:3rem}.hero__video{height:450px}.offers__mobile{display:none}.offers__desktop{display:flex;justify-content:space-between;align-items:center;width:100%;height:70vh}.offers__container{position:relative;display:flex;justify-content:center;align-items:center;height:100%;width:80%;margin-right:2em}.offers__aside{width:15%;height:100%;background-color:#9da292}.offers__title{opacity:0;color:#faf8f0;position:relative;top:400px;right:30px;transform:translateY(-50%);font-family:Playfair Display,serif;font-weight:400;font-size:10rem;text-transform:uppercase;letter-spacing:5px}.offers__item{padding:1em}@keyframes e{0%{opacity:0;transform:translateX(-300px) rotate(-90deg)}to{opacity:1;transform:translateX(0) rotate(-90deg)}}.activeOfferTitle{animation:e 1s ease-in-out forwards}.portfolio__title--desktop{display:none}.portfolio__boxes{display:flex}.portfolio__images--item,.portfolio__video{width:170px;height:250px}.portfolio__box--left{width:80%}.portfolio__box--right{overflow:hidden;display:block;position:sticky;top:0;height:100vh;width:20%;background-color:#9da292}.portfolio__text{display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__title{opacity:0;transform:translateX(300px);color:#faf8f0;position:relative;top:350px;right:-15px;font-family:Playfair Display,serif;font-weight:400;font-size:12rem;text-transform:uppercase;letter-spacing:2px}@keyframes f{0%{opacity:0;transform:translateX(300px) rotate(-90deg)}to{opacity:1;transform:translateX(0) rotate(-90deg)}}.portfolio .activeTitle{animation:f 1s ease-in-out forwards}.portfolio__info{text-align:center;font-family:Playfair Display,serif;font-weight:lighter;font-size:1.6rem;padding:.5em 1em}}@media (min-width:900px){.about__title{font-size:4rem}.about__box{width:55%}.about__info{flex-direction:row;justify-content:space-around}.about__img{width:300px;height:450px;margin-bottom:0}.about__img-box{border-right:1px solid hsla(0,1%,76%,.548)}.about__heading{font-size:4rem}.offers__title{top:385px;right:40px}.rules__header{font-size:6rem}.rules__title{font-size:5rem}.rules__item{font-size:2.2rem}.acordeon,.acordeon-btn{width:750px}.portfolio__images--item,.portfolio__video{width:200px;height:280px}.portfolio__title{right:-20px}}@media (min-width:1024px){.hero__video{height:500px}.hero__text2{width:40px;height:40px}.portfolio__images--item,.portfolio__video{width:200px;height:300px}.portfolio__title{right:-40px}}@media (min-width:1100px){.portfolio__images--item,.portfolio__video{width:250px;height:350px}.offers__title{top:375px;right:50px}}@media (min-width:1200px){.header__heading{font-size:7rem}.header__arrow,.header__text{font-size:3rem}.header__btn{font-size:2rem}.about__title{font-size:5rem}.about__img{width:400px;height:600px;margin-bottom:1em}.about__heading{font-size:5rem}.about__text{font-size:2rem}.hero__video{height:650px}.hero__text2{width:50px;height:50px}.offers__item{font-size:2.3rem}.offers__title{top:370px;right:60px}.rules__header{font-size:6.5rem}.rules__title{font-size:5.5rem}.rules__item{font-size:2.3rem}.acordeon{width:800px}.acordeon-btn{font-size:2.3rem;width:800px}.portfolio__images--item,.portfolio__video{width:250px;height:350px}.portfolio__title{right:-60px}}@media (min-width:1400px){.offers__title{top:330px;right:80px}.portfolio__images--item,.portfolio__video{width:350px;height:450px}.portfolio__title{right:-100px}}@media (min-width:1800px){.hero__video{height:700px}.rules{width:100%;height:100vh}.rules__back{margin-top:200px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
