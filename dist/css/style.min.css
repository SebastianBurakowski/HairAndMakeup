*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-family:Dosis,serif;font-weight:lighter;font-size:62.5%;scroll-behavior:smooth}body{background-color:#faf8f0;font-size:1.6rem}.burger-btn{position:fixed;top:10px;right:10px;padding:1em;background:none;border:1px solid transparent;cursor:pointer;z-index:1000}.burger-btn:hover .burger-btn__bars:after{width:60%}.burger-btn:hover .burger-btn__bars:before{width:30%}.burger-btn:focus{outline:none;border:1px solid hsla(0,0%,100%,.5);border-radius:8px}.burger-btn__box{position:relative;width:40px;height:30px}.burger-btn__bars,.burger-btn__bars:after,.burger-btn__bars:before{position:absolute;right:0;content:"";height:3px;background-color:#fff;transition:width .3s}.burger-btn__bars{width:100%}.burger-btn__bars:after{width:100%;top:13px}.burger-btn__bars:before{width:100%;top:27px;transition-delay:.1s}.burger-btn .black-bars-color,.burger-btn .black-bars-color:after,.burger-btn .black-bars-color:before{background-color:#2e2e2e}.nav{position:fixed;top:0;width:100%;height:100vh;display:flex;justify-content:center;align-items:center;background-image:linear-gradient(180deg,#9c8977,rgba(75,66,56,.6235294118));z-index:150;transform:translateY(-120%);transition:transform 1s cubic-bezier(.17,.67,1,1.23)}.nav--active{transform:translateY(0)}.nav__item{letter-spacing:1px;text-align:center;font-size:2rem;position:relative;display:block;text-decoration:none;color:#fff;text-transform:uppercase;margin:.5em 0;padding:.5em 0}.nav__item:before{content:"";position:absolute;bottom:10px;left:0;width:100%;height:2px;transform:scaleX(0);transition:transform .5s;background-color:#f5efed}.nav__item:hover:before{transform:scaleX(1)}.header{z-index:100;overflow:hidden;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;width:100%;height:100vh;background-image:linear-gradient(45deg,#000,#000)}.header__video{background-color:#000;position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;opacity:.4;z-index:-1}.header__heading{font-family:Linden Hill,serif;font-style:italic;font-weight:lighter;font-size:3rem;padding:.5em 0;color:#faf8f0;animation:a 2s ease-in-out}.header__text{font-weight:lighter;letter-spacing:10px;color:#faf8f0;margin-bottom:5em;animation:b 2s ease-in-out 1s forwards}.header__btn,.header__text{opacity:0;font-family:Playfair Display,serif;font-size:1.5rem;text-transform:uppercase}.header__btn{letter-spacing:1px;width:150px;color:#f5efed;background-color:transparent;padding:.6em 1.2em;text-decoration:none;border:1px solid #a18d79;border-radius:6px;transition:background-color 1s;animation:c 3s ease-in-out 2s forwards}.header__btn:hover{background-color:hsla(29,14%,50%,.2745098039)}.header__arrow{position:absolute;bottom:5px;left:50%;transform:translate(-50%,-50%);font-size:2rem;color:#f5efed;margin-left:-18px}@keyframes a{0%{opacity:0;transform:translateY(70%)}to{opacity:1;transform:translateY(0)}}@keyframes b{0%{opacity:0;transform:translateY(-200%)}to{opacity:1;transform:translateY(0)}}@keyframes c{0%{opacity:0}to{opacity:1}}.about__info{display:flex;justify-content:center;align-items:center;flex-direction:column}.about__img{position:relative;opacity:0;width:260px;height:400px;border:none;border-radius:8px;margin-bottom:.5em;transition:3s;box-shadow:5px 5px 10px rgba(46,46,46,.2)}.about__img-box{display:flex;justify-content:center;align-items:center;background-color:transparent;width:40%;border-right:1px solid hsla(0,1%,76%,.548)}.about__heading{font-family:Linden Hill,serif;font-size:3rem;padding:.5em 1em}.about__heading,.about__text{font-weight:lighter;opacity:0;text-align:center}.about__text{font-family:Dosis,serif;letter-spacing:1px;font-size:1.8rem;padding:1em;padding-top:0}.about .activeAnimation{animation:a 2s ease-in-out forwards}.activeVideo{animation:a 1.5s ease-in-out forwards}.hero{position:relative;display:flex;justify-content:space-evenly;flex-direction:column;align-items:center;background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0));height:130vh;padding:1em}.hero__video{opacity:0;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.hero__video--second{animation-delay:.5s}.hero__text2{position:absolute;right:50%;top:50%;width:30px;height:30px;transform:translate(50%,-50%)}.offers{background-image:linear-gradient(45deg,hsla(29,26%,66%,.168627451),hsla(0,0%,100%,0))}.offers__title{padding-top:.2em;padding-right:.5em}.offers__box{position:relative;display:flex;justify-content:center;align-items:center;border-top:2px solid #a18d79;border-bottom:2px solid #a18d79;padding:.5em 1em}.offers__list{text-align:center;margin:.5em 0;list-style:none}.offers__list a{font-weight:700;text-decoration:none;color:#9da292;cursor:pointer}.offers__item{font-family:Dosis,serif;font-weight:lighter;font-size:1.8rem;padding:.5em 1em;border-bottom:1px solid #000;letter-spacing:1px}.offers__video{position:absolute;opacity:0}.rules{z-index:2;position:relative;background-image:url(../../../dist/img/header_img.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;overflow:hidden}.rules__list{border-bottom:1px solid hsla(0,1%,76%,.548)}.rules__hero{z-index:-1;position:absolute;top:0;left:0;background-color:rgba(0,0,0,.82);width:100%;height:300vh}.rules__header{opacity:0;font-size:4.5rem;padding:.5em 0;animation:a 2s ease-in-out forwards}.rules__header,.rules__title{color:#f5efed;font-family:Playfair Display,serif;text-align:center}.rules__title{font-weight:lighter;font-size:3rem;padding:.5em}.rules__boxes{display:flex;justify-content:center;align-items:center;flex-direction:column}.rules__items{text-align:center;list-style:none;padding:1em 0}.rules__item{font-family:Dosis,serif;font-weight:lighter;font-size:1.8rem;padding:.2em 0}.rules__back,.rules__item{color:#f5efed;letter-spacing:1px}.rules__back{font-family:Playfair Display,serif;display:block;margin-top:50px;font-size:2.2rem;font-weight:700;padding:.5em 1em;text-decoration:none}.rules__faq{margin-top:2em;padding:.5em 1em}.acordeon{background-color:transparent;display:flex;justify-content:space-around;align-items:center;flex-direction:column;border-radius:50px;padding-bottom:0;width:100%;height:100%;border:1px solid hsla(0,1%,76%,.548);overflow:hidden;box-shadow:5px 5px 20px hsla(0,1%,76%,.548)}.acordeon-box{font-size:1.8rem;font-family:Dosis,serif;font-weight:lighter;letter-spacing:1px;margin-bottom:1em}.acordeon-box:last-child{margin-bottom:0}.acordeon-btn{font-family:Playfair Display,serif;font-weight:lighter;color:#fff;font-size:2rem;padding:.5em 1em;cursor:pointer;background-color:transparent;border:none;border-bottom:1px solid hsla(0,1%,76%,.548)}.acordeon-info{display:none}.acordeon-info-text{text-align:center;color:#f5efed;font-size:1.8rem;padding:1em;border-bottom:1px solid #fff;border-radius:5px}.activeAcordeon{display:flex}.portfolio{padding:2em 0}.portfolio__video{animation:none;width:200px;height:280px}.portfolio__images{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:1em 2em}.portfolio__images--item{display:block;margin-bottom:1em;width:200px;height:280px;border:none;border-radius:8px;box-shadow:5px 5px 10px rgba(46,46,46,.2);transition:box-shadow .4s,transform .4s}.portfolio__images--item:hover{box-shadow:8px 8px 13px rgba(46,46,46,.3);transform:scale(1.01)}.portfolio__video{opacity:1;object-fit:cover;height:400px;border-radius:20px;overflow:hidden;box-shadow:5px 5px 10px rgba(46,46,46,.5)}.portfolio__box--left{display:flex;justify-content:center;align-items:center}.portfolio__box--right{display:none}.portfolio__more{color:#9da292;text-decoration:none}.portfolio__more--box{height:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__more--text{font-size:2.3rem}.portfolio__instagram{font-size:9rem}.review{height:80vh;justify-content:space-between}.review,.review__container{display:flex;align-items:center}.review__container{position:relative;justify-content:center;background-color:#fff;height:100%;width:70%;margin-right:2em}.review__img{z-index:100;position:absolute;bottom:-300px;left:-100px;height:400px;width:300px}.review__aside{width:20%;height:100%;background-color:#9da292}.review__title{color:#faf8f0;position:relative;top:50%;right:120px;font-family:Playfair Display,serif;font-weight:400;font-size:12rem;text-transform:uppercase;letter-spacing:2px;transform:rotate(-90deg)}.review__boxes{position:relative;display:flex;justify-content:space-around;align-items:center;height:90%;width:95%;background-color:#f5ddda;padding:1em 2em}.review__instagram{display:block;text-decoration:none;color:#9da292;font-size:3rem;position:absolute;bottom:50px;right:50px;font-family:Linden Hill,serif;font-weight:lighter;border:1px solid #fff;border-radius:10px;padding:.5em 1em;box-shadow:8px 8px 13px rgba(46,46,46,.3);animation:d 1.5s infinite}@keyframes d{0%{transform:scale(1)}50%{transform:scale(1.1)}to{transform:scale(1)}}.review__link{display:block;text-align:center;color:#000;text-decoration:none;margin:0 1em;transition:transform 1s,box-shadow 1s}.review__link:hover{box-shadow:8px 8px 13px rgba(46,46,46,.3);transform:scale(1.01)}.review__opinion{height:250px;background-color:#fff;box-shadow:5px 5px 5px rgba(46,46,46,.2);border:none}.review__info{height:100%;position:relative;display:flex;justify-content:center;align-items:center}.review__header{position:absolute;top:0;left:0;padding:.5em 1em;font-family:Linden Hill,serif;font-size:3rem;border-bottom:1px solid hsla(0,1%,76%,.548)}.review__text{padding:.5em 1em;font-size:2rem;margin-top:3em}.review__slick{color:#fff;background-color:transparent;border:none;font-size:3.5rem;cursor:pointer}.wrapper{margin:0 auto;width:100%;max-width:1700px}.section-heading{font-family:Linden Hill,serif;text-align:left;font-weight:400;font-size:2.5rem;padding:.5em 1em;text-transform:uppercase;color:#a18d79;letter-spacing:2px}.section-heading--right{text-align:right}@media (min-width:390px){.portfolio__video{width:150px;height:230px}.portfolio__images{flex-direction:row;justify-content:space-between;flex-wrap:wrap}.portfolio__images--item{width:150px;height:200px}}@media (min-width:430px){.portfolio__images--item,.portfolio__video{width:170px;height:250px}}@media (min-width:480px){.header__heading{font-size:4rem}.header__text{font-size:2rem}.header__arrow{font-size:2.5rem;left:50%;transform:translate(-50%,-50%)}.about__text{font-size:2rem}.hero{height:140vh}.hero__video{height:450px}.offers__item{font-size:2rem}.rules__header{font-size:5rem}.rules__title{font-size:3.5rem}.acordeon,.acordeon-btn{width:400px}.portfolio__video{width:170px;height:250px}}@media (min-width:576px){.header__heading{font-size:4.5rem}.header__arrow,.header__text{font-size:2.5rem}.header__arrow{left:50%;transform:translate(-50%,-50%)}.header__btn{font-size:1.7rem}.about__title{font-size:3.5rem}.about__img{width:300px;height:450px}.about__heading{font-size:3.5rem}.hero{height:100%;flex-direction:row}.hero__video{height:350px}.hero__text2{position:absolute;right:50%;top:50%;transform:translate(50%,-50%)}.offers__title{font-size:3.5rem}.offers__video{opacity:1;height:70px;top:270px;left:-10px}.acordeon,.acordeon-btn{width:500px}.portfolio__images--item,.portfolio__video{width:200px;height:280px}}@media (min-width:670px){.hero__video{height:400px}.offers__video{height:80px;top:265px;left:10px}.rules__header{font-size:5.5rem}.rules__title{font-size:4rem}.rules__item{font-size:2rem;letter-spacing:1px}.acordeon{width:600px}.acordeon-btn{width:600px;font-size:2.2rem}.acordeon-info-text{color:#f5efed;font-size:2rem}.portfolio__images--item,.portfolio__video{width:170px;height:250px}}@media (min-width:768px){.header__heading{font-size:6rem}.header__arrow,.header__text{font-size:3rem}.hero__video{height:450px}.offers__item{padding:1em}.offers__video{height:100px;top:385px;left:10px}.portfolio__boxes{display:flex}.portfolio__images--item,.portfolio__video{width:170px;height:250px}.portfolio__box--left{width:80%}.portfolio__box--right{display:block;position:sticky;top:0;height:100vh;width:20%;background-color:#9da292;overflow:hidden}.portfolio__text{display:flex;justify-content:space-evenly;align-items:center;flex-direction:column}.portfolio__title{color:#faf8f0;position:relative;top:350px;right:-15px;font-family:Playfair Display,serif;font-weight:400;font-size:12rem;text-transform:uppercase;letter-spacing:2px;transform:rotate(-90deg)}.portfolio__info{text-align:center;font-family:Playfair Display,serif;font-weight:lighter;font-size:1.6rem;padding:.5em 1em}}@media (min-width:900px){.about__title{font-size:4rem}.about__box{width:55%}.about__info{flex-direction:row;justify-content:space-around}.about__img{width:300px;height:450px;margin-bottom:0}.about__heading,.offers__title{font-size:4rem}.offers__item{font-size:2.2rem}.offers__video{top:430px;left:60px}.rules__header{font-size:6rem}.rules__title{font-size:5rem}.rules__item{font-size:2.2rem}.acordeon,.acordeon-btn{width:750px}.portfolio__images--item,.portfolio__video{width:200px;height:280px}.portfolio__title{right:-20px}}@media (min-width:1024px){.hero__video{height:500px}.hero__text2{width:40px;height:40px}.offers__video{top:430px;left:150px}.portfolio__images--item,.portfolio__video{width:200px;height:300px}.portfolio__title{right:-40px}}@media (min-width:1100px){.portfolio__images--item,.portfolio__video{width:250px;height:350px}}@media (min-width:1200px){.header__heading{font-size:7rem}.header__arrow,.header__text{font-size:3rem}.header__btn{font-size:2rem}.about__title{font-size:5rem}.about__img{width:400px;height:600px;margin-bottom:1em}.about__heading{font-size:5rem}.about__text{font-size:2rem}.hero__video{height:650px}.hero__text2{width:50px;height:50px}.offers__title{font-size:5rem}.offers__item{font-size:2.3rem}.offers__video{top:455px;left:245px}.rules__header{font-size:6.5rem}.rules__title{font-size:5.5rem}.rules__item{font-size:2.3rem}.acordeon{width:800px}.acordeon-btn{font-size:2.3rem;width:800px}.portfolio__images--item,.portfolio__video{width:250px;height:350px}.portfolio__title{right:-60px}}@media (min-width:1400px){.offers__video{top:455px;left:460px}.portfolio__images--item,.portfolio__video{width:350px;height:450px}.portfolio__title{right:-60px}}@media (min-width:1800px){.hero__video{height:700px}.rules{width:100%;height:100vh}.rules__back{margin-top:200px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC9fcmVzZXQuc2NzcyIsInN0eWxlLmNzcyIsIl92YXJpYWJsZXMuc2NzcyIsImxheW91dC9fYmFzZS5zY3NzIiwiX2NvbXBvbmVudHMuc2NzcyIsIm1lZGlhL19leHRyYXNtYWxsLnNjc3MiLCJtZWRpYS9fc21hbGwuc2NzcyIsIm1lZGlhL19tZWRpdW0uc2NzcyIsIm1lZGlhL19sYXJnZS5zY3NzIiwibWVkaWEvX2V4dHJhbGFyZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxpQkFHSSxTQUFBLEFBQ0EsVUFBQSxBQUNBLHFCQUFBLENDRkosQURLQSxLQUNJLHdCQUFBLEFBQ0Esb0JBQUEsQUFDQSxnQkFBQSxBQUNBLHNCQUFBLENDRkosQURNQSxLQUNJLHlCRWJVLEFGY1YsZ0JBQUEsQ0NISixBRWZBLFlBQ0ksZUFBQSxBQUNBLFNBQUEsQUFDQSxXQUFBLEFBQ0EsWUFBQSxBQUNBLGdCQUFBLEFBQ0EsNkJBQUEsQUFDQSxlQUFBLEFBQ0EsWUFBQSxDRmtCSixBRWRRLDBDQUNJLFNBQUEsQ0ZnQlosQUViUSwyQ0FDSSxTQUFBLENGZVosQUVYSSxrQkFDSSxhQUFBLEFBQ0Esb0NBQUEsQUFDQSxpQkFBQSxDRmFSLEFFVEksaUJBQ0ksa0JBQUEsQUFDQSxXQUFBLEFBQ0EsV0FBQSxDRldSLEFFUkksbUVBR0ksa0JBQUEsQUFDQSxRQUFBLEFBQ0EsV0FBQSxBQUNBLFdBQUEsQUFDQSxzQkQzQ0ssQUM0Q0wsb0JBQUEsQ0ZRUixBRUxJLGtCQUNJLFVBQUEsQ0ZPUixBRUxRLHdCQUNJLFdBQUEsQUFDQSxRQUFBLENGT1osQUVKUSx5QkFDSSxXQUFBLEFBQ0EsU0FBQSxBQUNBLG9CQUFBLENGTVosQUVGSSx1R0FHSSx3QkQ3REQsQ0RpRVAsQUVFQSxLQUNJLGVBQUEsQUFDQSxNQUFBLEFBQ0EsV0FBQSxBQUNBLGFBQUEsQUFDQSxhQUFBLEFBQ0EsdUJBQUEsQUFDQSxtQkFBQSxBQUNBLDRFRHBFbUIsQUNxRW5CLFlBQUEsQUFDQSw0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Q1BxNUJOLEFPbjVCTSxjQUNJLGlCQUFBLEFBQ0EsV0FBQSxDUHE1QlYsQU90NEJVLDJDQUNJLFlBQUEsQUFDQSxZQUFBLENQNDRCZCxBT3I0Qk0sa0JBQ0ksV0FBQSxDUHU0QlYsQ0FDRixBUXhpQ0EsMEJBR1EsZUFDSSxVQUFBLEFBQ0EsVUFBQSxDUndpQ1YsQVExaENVLDJDQUNJLFlBQUEsQUFDQSxZQUFBLENSZ2lDZCxBUXpoQ00sa0JBQ0ksV0FBQSxDUjJoQ1YsQ0FDRixBUXBoQ0EsMEJBR1EsYUFDSSxZQUFBLENSb2hDVixBUWhoQ0UsT0FDSSxXQUFBLEFBQ0EsWUFBQSxDUmtoQ04sQVFoaENNLGFBRUksZ0JBQUEsQ1JpaENWLENBQ0YiLCJmaWxlIjoic3R5bGUubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgJy4vdmFyaWFibGVzJyBhcyAqO1xyXG5cclxuXHJcbiosXHJcbio6OmFmdGVyLFxyXG4qOjpiZWZvcmUge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiRG9zaXNcIiwgc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgIGZvbnQtc2l6ZTogNjIuNSU7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxuXHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZC1jb2xvcjtcclxuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG59IiwiKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IFwiRG9zaXNcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBmb250LXNpemU6IDYyLjUlO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUY4RjA7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG4uYnVyZ2VyLWJ0biB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMHB4O1xuICByaWdodDogMTBweDtcbiAgcGFkZGluZzogMWVtO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiAxMDAwO1xufVxuLmJ1cmdlci1idG46aG92ZXIgLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyIHtcbiAgd2lkdGg6IDYwJTtcbn1cbi5idXJnZXItYnRuOmhvdmVyIC5idXJnZXItYnRuX19iYXJzOjpiZWZvcmUge1xuICB3aWR0aDogMzAlO1xufVxuLmJ1cmdlci1idG46Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5idXJnZXItYnRuX19ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDMwcHg7XG59XG4uYnVyZ2VyLWJ0bl9fYmFycywgLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyLCAuYnVyZ2VyLWJ0bl9fYmFyczo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgY29udGVudDogXCJcIjtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IHdpZHRoIDAuM3M7XG59XG4uYnVyZ2VyLWJ0bl9fYmFycyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmJ1cmdlci1idG5fX2JhcnM6OmFmdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMTNweDtcbn1cbi5idXJnZXItYnRuX19iYXJzOjpiZWZvcmUge1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAyN3B4O1xuICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzO1xufVxuLmJ1cmdlci1idG4gLmJsYWNrLWJhcnMtY29sb3IsXG4uYnVyZ2VyLWJ0biAuYmxhY2stYmFycy1jb2xvcjo6YWZ0ZXIsXG4uYnVyZ2VyLWJ0biAuYmxhY2stYmFycy1jb2xvcjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJlMmUyZTtcbn1cblxuLm5hdiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICM5Yzg5NzcsIHJnYmEoNzUsIDY2LCA1NiwgMC42MjM1Mjk0MTE4KSk7XG4gIHotaW5kZXg6IDE1MDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMjAlKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLjE3LCAwLjY3LCAxLCAxLjIzKTtcbn1cbi5uYXYtLWFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbn1cbi5uYXZfX2l0ZW0ge1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luOiAwLjVlbSAwO1xuICBwYWRkaW5nOiAwLjVlbSAwO1xufVxuLm5hdl9faXRlbTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDEwcHg7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDJweDtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVFRkVEO1xufVxuLm5hdl9faXRlbTpob3Zlcjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XG59XG5cbi5oZWFkZXIge1xuICB6LWluZGV4OiAxMDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiKDAsIDAsIDApLCByZ2IoMCwgMCwgMCkpO1xufVxuLmhlYWRlcl9fdmlkZW8ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvcGFjaXR5OiAwLjQ7XG4gIHotaW5kZXg6IC0xO1xufVxuLmhlYWRlcl9faGVhZGluZyB7XG4gIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBmb250LXNpemU6IDNyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDA7XG4gIGNvbG9yOiAjRkFGOEYwO1xuICBhbmltYXRpb246IGhhbmRsZVNob3cgMnMgZWFzZS1pbi1vdXQ7XG59XG4uaGVhZGVyX190ZXh0IHtcbiAgb3BhY2l0eTogMDtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMTBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNGQUY4RjA7XG4gIG1hcmdpbi1ib3R0b206IDVlbTtcbiAgYW5pbWF0aW9uOiBoYW5kbGVTaG93RG93biAycyBlYXNlLWluLW91dCAxcyBmb3J3YXJkcztcbn1cbi5oZWFkZXJfX2J0biB7XG4gIG9wYWNpdHk6IDA7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIHdpZHRoOiAxNTBweDtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgcGFkZGluZzogMC42ZW0gMS4yZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ExOGQ3OTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzO1xuICBhbmltYXRpb246IGhhbmRsZVNob3dPcGFjaXR5IDNzIGVhc2UtaW4tb3V0IDJzIGZvcndhcmRzO1xufVxuLmhlYWRlcl9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNDYsIDEyOCwgMTExLCAwLjI3NDUwOTgwMzkpO1xufVxuLmhlYWRlcl9fYXJyb3cge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNXB4O1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBmb250LXNpemU6IDJyZW07XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBtYXJnaW4tbGVmdDogLTE4cHg7XG59XG5cbkBrZXlmcmFtZXMgaGFuZGxlU2hvdyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg3MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3dEb3duIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAlKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxufVxuQGtleWZyYW1lcyBoYW5kbGVTaG93T3BhY2l0eSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbi5hYm91dF9faW5mbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmFib3V0X19pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG9wYWNpdHk6IDA7XG4gIHdpZHRoOiAyNjBweDtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICB0cmFuc2l0aW9uOiAzcztcbiAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoNDYsIDQ2LCA0NiwgMC4yKTtcbn1cbi5hYm91dF9faW1nLWJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgd2lkdGg6IDQwJTtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XG59XG4uYWJvdXRfX2hlYWRpbmcge1xuICBmb250LWZhbWlseTogXCJMaW5kZW4gSGlsbFwiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIG9wYWNpdHk6IDA7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uYWJvdXRfX3RleHQge1xuICBvcGFjaXR5OiAwO1xuICBmb250LWZhbWlseTogXCJEb3Npc1wiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgZm9udC1zaXplOiAxLjhyZW07XG4gIHBhZGRpbmc6IDFlbSAxZW07XG4gIHBhZGRpbmctdG9wOiAwO1xufVxuLmFib3V0IC5hY3RpdmVBbmltYXRpb24ge1xuICBhbmltYXRpb246IGhhbmRsZVNob3cgMnMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XG59XG5cbi5hY3RpdmVWaWRlbyB7XG4gIGFuaW1hdGlvbjogaGFuZGxlU2hvdyAxLjVzIGVhc2UtaW4tb3V0IGZvcndhcmRzO1xufVxuXG4uaGVybyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgxOTEsIDE2OCwgMTQ3LCAwLjE2ODYyNzQ1MSksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCkpO1xuICBoZWlnaHQ6IDEzMHZoO1xuICBwYWRkaW5nOiAxZW0gMWVtO1xufVxuLmhlcm9fX3ZpZGVvIHtcbiAgb3BhY2l0eTogMDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGhlaWdodDogNDAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCByZ2JhKDQ2LCA0NiwgNDYsIDAuNSk7XG59XG4uaGVyb19fdmlkZW8tLXNlY29uZCB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC41cztcbn1cbi5oZXJvX190ZXh0MiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDUwJSwgLTUwJSk7XG59XG5cbi5vZmZlcnMge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMTkxLCAxNjgsIDE0NywgMC4xNjg2Mjc0NTEpLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApKTtcbn1cbi5vZmZlcnNfX3RpdGxlIHtcbiAgcGFkZGluZy10b3A6IDAuMmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVlbTtcbn1cbi5vZmZlcnNfX2JveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCAjYTE4ZDc5O1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2ExOGQ3OTtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xufVxuLm9mZmVyc19fbGlzdCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAwLjVlbSAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLm9mZmVyc19fbGlzdCBhIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICM5REEyOTI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5vZmZlcnNfX2l0ZW0ge1xuICBmb250LWZhbWlseTogXCJEb3Npc1wiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cbi5vZmZlcnNfX3ZpZGVvIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucnVsZXMge1xuICB6LWluZGV4OiAyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi9kaXN0L2ltZy9oZWFkZXJfaW1nLmpwZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5ydWxlc19fbGlzdCB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcbn1cbi5ydWxlc19faGVybyB7XG4gIHotaW5kZXg6IC0xO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgyKTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwdmg7XG59XG4ucnVsZXNfX2hlYWRlciB7XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xuICBvcGFjaXR5OiAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogNC41cmVtO1xuICBwYWRkaW5nOiAwLjVlbSAwO1xuICBhbmltYXRpb246IGhhbmRsZVNob3cgMnMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XG59XG4ucnVsZXNfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGNvbG9yOiAjRjVFRkVEO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgcGFkZGluZzogMC41ZW0gMC41ZW07XG59XG4ucnVsZXNfX2JveGVzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4ucnVsZXNfX2l0ZW1zIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAxZW0gMDtcbn1cbi5ydWxlc19faXRlbSB7XG4gIGNvbG9yOiAjRjVFRkVEO1xuICBmb250LWZhbWlseTogXCJEb3Npc1wiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBwYWRkaW5nOiAwLjJlbSAwO1xufVxuLnJ1bGVzX19iYWNrIHtcbiAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcbiAgY29sb3I6ICNGNUVGRUQ7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuICBmb250LXNpemU6IDIuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuLnJ1bGVzX19mYXEge1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbn1cblxuLmFjb3JkZW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaGFkb3c6IDVweCA1cHggMjBweCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcbn1cbi5hY29yZGVvbi1ib3gge1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiRG9zaXNcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG4uYWNvcmRlb24tYm94Omxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmFjb3JkZW9uLWJ0biB7XG4gIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMTk0LCAxOTMsIDE5MywgMC41NDgpO1xufVxuLmFjb3JkZW9uLWluZm8ge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmFjb3JkZW9uLWluZm8tdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNGNUVGRUQ7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBwYWRkaW5nOiAxZW0gMWVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uYWN0aXZlQWNvcmRlb24ge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ucG9ydGZvbGlvIHtcbiAgcGFkZGluZzogMmVtIDA7XG59XG4ucG9ydGZvbGlvX192aWRlbyB7XG4gIGFuaW1hdGlvbjogbm9uZTtcbiAgd2lkdGg6IDIwMHB4O1xuICBoZWlnaHQ6IDI4MHB4O1xufVxuLnBvcnRmb2xpb19faW1hZ2VzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmc6IDFlbSAyZW07XG59XG4ucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB3aWR0aDogMjAwcHg7XG4gIGhlaWdodDogMjgwcHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3gtc2hhZG93OiA1cHggNXB4IDEwcHggcmdiYSg0NiwgNDYsIDQ2LCAwLjIpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuNHMsIHRyYW5zZm9ybSAwLjRzO1xufVxuLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogOHB4IDhweCAxM3B4IHJnYmEoNDYsIDQ2LCA0NiwgMC4zKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcbn1cbi5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgb3BhY2l0eTogMTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGhlaWdodDogNDAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCByZ2JhKDQ2LCA0NiwgNDYsIDAuNSk7XG59XG4ucG9ydGZvbGlvX19ib3gtLWxlZnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5wb3J0Zm9saW9fX2JveC0tcmlnaHQge1xuICBkaXNwbGF5OiBub25lO1xufVxuLnBvcnRmb2xpb19fbW9yZSB7XG4gIGNvbG9yOiAjOURBMjkyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4ucG9ydGZvbGlvX19tb3JlLS1ib3gge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLnBvcnRmb2xpb19fbW9yZS0tdGV4dCB7XG4gIGZvbnQtc2l6ZTogMi4zcmVtO1xufVxuLnBvcnRmb2xpb19faW5zdGFncmFtIHtcbiAgZm9udC1zaXplOiA5cmVtO1xufVxuXG4ucmV2aWV3IHtcbiAgaGVpZ2h0OiA4MHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ucmV2aWV3X19jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiA3MCU7XG4gIG1hcmdpbi1yaWdodDogMmVtO1xufVxuLnJldmlld19faW1nIHtcbiAgei1pbmRleDogMTAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTMwMHB4O1xuICBsZWZ0OiAtMTAwcHg7XG4gIGhlaWdodDogNDAwcHg7XG4gIHdpZHRoOiAzMDBweDtcbn1cbi5yZXZpZXdfX2FzaWRlIHtcbiAgd2lkdGg6IDIwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOURBMjkyO1xufVxuLnJldmlld19fdGl0bGUge1xuICBjb2xvcjogI0ZBRjhGMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDUwJTtcbiAgcmlnaHQ6IDEyMHB4O1xuICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDEycmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xufVxuLnJldmlld19fYm94ZXMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDkwJTtcbiAgd2lkdGg6IDk1JTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y1REREQTtcbiAgcGFkZGluZzogMWVtIDJlbTtcbn1cbi5yZXZpZXdfX2luc3RhZ3JhbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjOURBMjkyO1xuICBmb250LXNpemU6IDNyZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiA1MHB4O1xuICByaWdodDogNTBweDtcbiAgZm9udC1mYW1pbHk6IFwiTGluZGVuIEhpbGxcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGJveC1zaGFkb3c6IDhweCA4cHggMTNweCByZ2JhKDQ2LCA0NiwgNDYsIDAuMyk7XG4gIGFuaW1hdGlvbjogYnRuQW5pbWF0aW9uIDEuNXMgaW5maW5pdGU7XG59XG5Aa2V5ZnJhbWVzIGJ0bkFuaW1hdGlvbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbn1cbi5yZXZpZXdfX2xpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogYmxhY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWFyZ2luOiAwIDFlbTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzLCBib3gtc2hhZG93IDFzO1xufVxuLnJldmlld19fbGluazpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDhweCA4cHggMTNweCByZ2JhKDQ2LCA0NiwgNDYsIDAuMyk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG59XG4ucmV2aWV3X19vcGluaW9uIHtcbiAgaGVpZ2h0OiAyNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggcmdiYSg0NiwgNDYsIDQ2LCAwLjIpO1xuICBib3JkZXI6IG5vbmU7XG59XG4ucmV2aWV3X19pbmZvIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLnJldmlld19faGVhZGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgZm9udC1mYW1pbHk6IFwiTGluZGVuIEhpbGxcIiwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMTk0LCAxOTMsIDE5MywgMC41NDgpO1xufVxuLnJldmlld19fdGV4dCB7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgZm9udC1zaXplOiAycmVtO1xuICBtYXJnaW4tdG9wOiAzZW07XG59XG4ucmV2aWV3X19zbGljayB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xuICBmb250LXNpemU6IDMuNXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ud3JhcHBlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNzAwcHg7XG59XG5cbi5zZWN0aW9uLWhlYWRpbmcge1xuICBmb250LWZhbWlseTogXCJMaW5kZW4gSGlsbFwiLCBzZXJpZjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNhMThkNzk7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG59XG4uc2VjdGlvbi1oZWFkaW5nLS1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMzkwcHgpIHtcbiAgLnBvcnRmb2xpb19fdmlkZW8ge1xuICAgIHdpZHRoOiAxNTBweDtcbiAgICBoZWlnaHQ6IDIzMHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX2ltYWdlcyB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC5wb3J0Zm9saW9fX2ltYWdlcy0taXRlbSB7XG4gICAgd2lkdGg6IDE1MHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MzBweCkge1xuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDE3MHB4O1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMTcwcHg7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG4gIC5oZWFkZXJfX2hlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxuICAuaGVhZGVyX190ZXh0IHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmhlYWRlcl9fYXJyb3cge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgfVxuICAuYWJvdXRfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAuaGVybyB7XG4gICAgaGVpZ2h0OiAxNDB2aDtcbiAgfVxuICAuaGVyb19fdmlkZW8ge1xuICAgIGhlaWdodDogNDUwcHg7XG4gIH1cbiAgLm9mZmVyc19faXRlbSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5ydWxlc19faGVhZGVyIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbiAgLnJ1bGVzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAzLjVyZW07XG4gIH1cbiAgLmFjb3JkZW9uIHtcbiAgICB3aWR0aDogNDAwcHg7XG4gIH1cbiAgLmFjb3JkZW9uLWJ0biB7XG4gICAgd2lkdGg6IDQwMHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMTcwcHg7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oZWFkZXJfX2hlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogNC41cmVtO1xuICB9XG4gIC5oZWFkZXJfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICB9XG4gIC5oZWFkZXJfX2Fycm93IHtcbiAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIH1cbiAgLmhlYWRlcl9fYnRuIHtcbiAgICBmb250LXNpemU6IDEuN3JlbTtcbiAgfVxuICAuYWJvdXRfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDMuNXJlbTtcbiAgfVxuICAuYWJvdXRfX2ltZyB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogNDUwcHg7XG4gIH1cbiAgLmFib3V0X19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDMuNXJlbTtcbiAgfVxuICAuaGVybyB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbiAgLmhlcm9fX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDM1MHB4O1xuICB9XG4gIC5oZXJvX190ZXh0MiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNTAlLCAtNTAlKTtcbiAgfVxuICAub2ZmZXJzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAzLjVyZW07XG4gIH1cbiAgLm9mZmVyc19fdmlkZW8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgaGVpZ2h0OiA3MHB4O1xuICAgIHRvcDogMjcwcHg7XG4gICAgbGVmdDogLTEwcHg7XG4gIH1cbiAgLmFjb3JkZW9uIHtcbiAgICB3aWR0aDogNTAwcHg7XG4gIH1cbiAgLmFjb3JkZW9uLWJ0biB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiAyODBweDtcbiAgfVxuICAucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDI4MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNjcwcHgpIHtcbiAgLmhlcm9fX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICB9XG4gIC5vZmZlcnNfX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gICAgdG9wOiAyNjVweDtcbiAgICBsZWZ0OiAxMHB4O1xuICB9XG4gIC5ydWxlc19faGVhZGVyIHtcbiAgICBmb250LXNpemU6IDUuNXJlbTtcbiAgfVxuICAucnVsZXNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDRyZW07XG4gIH1cbiAgLnJ1bGVzX19pdGVtIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgfVxuICAuYWNvcmRlb24ge1xuICAgIHdpZHRoOiA2MDBweDtcbiAgfVxuICAuYWNvcmRlb24tYnRuIHtcbiAgICB3aWR0aDogNjAwcHg7XG4gICAgZm9udC1zaXplOiAyLjJyZW07XG4gIH1cbiAgLmFjb3JkZW9uLWluZm8tdGV4dCB7XG4gICAgY29sb3I6ICNGNUVGRUQ7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMTcwcHg7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgfVxuICAucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICAgIHdpZHRoOiAxNzBweDtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlcl9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiA2cmVtO1xuICB9XG4gIC5oZWFkZXJfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgfVxuICAuaGVhZGVyX19hcnJvdyB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG4gIC5oZXJvX192aWRlbyB7XG4gICAgaGVpZ2h0OiA0NTBweDtcbiAgfVxuICAub2ZmZXJzX19pdGVtIHtcbiAgICBwYWRkaW5nOiAxZW0gMWVtO1xuICB9XG4gIC5vZmZlcnNfX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIHRvcDogMzg1cHg7XG4gICAgbGVmdDogMTBweDtcbiAgfVxuICAucG9ydGZvbGlvX19ib3hlcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDE3MHB4O1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMTcwcHg7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgfVxuICAucG9ydGZvbGlvX19ib3gtLWxlZnQge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbiAgLnBvcnRmb2xpb19fYm94LS1yaWdodCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IHN0aWNreTtcbiAgICB0b3A6IDA7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB3aWR0aDogMjAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM5REEyOTI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAucG9ydGZvbGlvX190ZXh0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICAucG9ydGZvbGlvX190aXRsZSB7XG4gICAgY29sb3I6ICNGQUY4RjA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMzUwcHg7XG4gICAgcmlnaHQ6IC0xNXB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDEycmVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICB9XG4gIC5wb3J0Zm9saW9fX2luZm8ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDkwMHB4KSB7XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxuICAuYWJvdXRfX2JveCB7XG4gICAgd2lkdGg6IDU1JTtcbiAgfVxuICAuYWJvdXRfX2luZm8ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cbiAgLmFib3V0X19pbWcge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDQ1MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbiAgLmFib3V0X19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDRyZW07XG4gIH1cbiAgLm9mZmVyc19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxuICAub2ZmZXJzX19pdGVtIHtcbiAgICBmb250LXNpemU6IDIuMnJlbTtcbiAgfVxuICAub2ZmZXJzX192aWRlbyB7XG4gICAgdG9wOiA0MzBweDtcbiAgICBsZWZ0OiA2MHB4O1xuICB9XG4gIC5ydWxlc19faGVhZGVyIHtcbiAgICBmb250LXNpemU6IDZyZW07XG4gIH1cbiAgLnJ1bGVzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG4gIC5ydWxlc19faXRlbSB7XG4gICAgZm9udC1zaXplOiAyLjJyZW07XG4gIH1cbiAgLmFjb3JkZW9uIHtcbiAgICB3aWR0aDogNzUwcHg7XG4gIH1cbiAgLmFjb3JkZW9uLWJ0biB7XG4gICAgd2lkdGg6IDc1MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiAyODBweDtcbiAgfVxuICAucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDI4MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3RpdGxlIHtcbiAgICByaWdodDogLTIwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlcm9fX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDUwMHB4O1xuICB9XG4gIC5oZXJvX190ZXh0MiB7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICB9XG4gIC5vZmZlcnNfX3ZpZGVvIHtcbiAgICB0b3A6IDQzMHB4O1xuICAgIGxlZnQ6IDE1MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgfVxuICAucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3RpdGxlIHtcbiAgICByaWdodDogLTQwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMTAwcHgpIHtcbiAgLnBvcnRmb2xpb19fdmlkZW8ge1xuICAgIHdpZHRoOiAyNTBweDtcbiAgICBoZWlnaHQ6IDM1MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX2ltYWdlcy0taXRlbSB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMzUwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlYWRlcl9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiA3cmVtO1xuICB9XG4gIC5oZWFkZXJfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgfVxuICAuaGVhZGVyX19hcnJvdyB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG4gIC5oZWFkZXJfX2J0biB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgfVxuICAuYWJvdXRfX2ltZyB7XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIGhlaWdodDogNjAwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG4gIC5hYm91dF9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG4gIC5hYm91dF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5oZXJvX192aWRlbyB7XG4gICAgaGVpZ2h0OiA2NTBweDtcbiAgfVxuICAuaGVyb19fdGV4dDIge1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgfVxuICAub2ZmZXJzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG4gIC5vZmZlcnNfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICB9XG4gIC5vZmZlcnNfX3ZpZGVvIHtcbiAgICB0b3A6IDQ1NXB4O1xuICAgIGxlZnQ6IDI0NXB4O1xuICB9XG4gIC5ydWxlc19faGVhZGVyIHtcbiAgICBmb250LXNpemU6IDYuNXJlbTtcbiAgfVxuICAucnVsZXNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDUuNXJlbTtcbiAgfVxuICAucnVsZXNfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICB9XG4gIC5hY29yZGVvbiB7XG4gICAgd2lkdGg6IDgwMHB4O1xuICB9XG4gIC5hY29yZGVvbi1idG4ge1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICAgIHdpZHRoOiA4MDBweDtcbiAgfVxuICAucG9ydGZvbGlvX192aWRlbyB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMzUwcHg7XG4gIH1cbiAgLnBvcnRmb2xpb19faW1hZ2VzLS1pdGVtIHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiAzNTBweDtcbiAgfVxuICAucG9ydGZvbGlvX190aXRsZSB7XG4gICAgcmlnaHQ6IC02MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XG4gIC5vZmZlcnNfX3ZpZGVvIHtcbiAgICB0b3A6IDQ1NXB4O1xuICAgIGxlZnQ6IDQ2MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3ZpZGVvIHtcbiAgICB3aWR0aDogMzUwcHg7XG4gICAgaGVpZ2h0OiA0NTBweDtcbiAgfVxuICAucG9ydGZvbGlvX19pbWFnZXMtLWl0ZW0ge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgICBoZWlnaHQ6IDQ1MHB4O1xuICB9XG4gIC5wb3J0Zm9saW9fX3RpdGxlIHtcbiAgICByaWdodDogLTYwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxODAwcHgpIHtcbiAgLmhlcm9fX3ZpZGVvIHtcbiAgICBoZWlnaHQ6IDcwMHB4O1xuICB9XG4gIC5ydWxlcyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgfVxuICAucnVsZXNfX2JhY2sge1xuICAgIG1hcmdpbi10b3A6IDIwMHB4O1xuICB9XG59IiwiLy9jb2xvcnMgZXRjXHJcbiRwdXJlLXdoaXRlOiAjZmZmO1xyXG4kbGlnaHQtd2hpdGU6ICNGNUVGRUQ7XHJcbiRsaWdodC13aGl0ZS1idG46ICNkYWRhZGE0MTtcclxuJGxpZ2h0LWdyZWVuOiM5REEyOTI7XHJcbiRkYXJrOiAjMmUyZTJlO1xyXG4kbWFpbi1jb2xvcjogI2ExOGQ3OTtcclxuJHNlY29uZC1jb2xvcjojRkFGOEYwO1xyXG4kcGluay1jb2xvcjojRjVERERBO1xyXG4kYnV0dG9uLWNvbG9yLWhvdmVyOiAjOTI4MDZmNDY7XHJcblxyXG4kZ3JleS1ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuNTI1KSwgcmdiKDAsIDAsIDApKTtcclxuJGJyb3duLWdyYWRpZW50LXNvbGlkOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjOWM4OTc3LCAjNGI0MjM4OWYpO1xyXG4kYnJvd24tZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgI2JmYTg5MzJiLCAjZmZmZmZmMDApO1xyXG4kYnJvd24tZ3JhZGllbnQtZmFxOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNiZmE4OTMyMiwjYmZhODkzMzEpO1xyXG4kZ3JleS1ncmFkaWVudC1zb2xpZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2IoMCwgMCwgMCksIHJnYigwLCAwLCAwKSk7IiwiLy9iYXNlIHN0eWxlIG1pbiB3aWR0aFxyXG5AdXNlICcuLi92YXJpYWJsZXMnIGFzICo7XHJcblxyXG4uYnVyZ2VyLWJ0biB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDEwcHg7XHJcbiAgICByaWdodDogMTBweDtcclxuICAgIHBhZGRpbmc6IDFlbTtcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcblxyXG4gICAgICAgIC5idXJnZXItYnRuX19iYXJzOjphZnRlciB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYnVyZ2VyLWJ0bl9fYmFyczo6YmVmb3JlIHtcclxuICAgICAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIC41KTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICB9XHJcblxyXG5cclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgIGhlaWdodDogMzBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19iYXJzLFxyXG4gICAgJl9fYmFyczo6YWZ0ZXIsXHJcbiAgICAmX19iYXJzOjpiZWZvcmUge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVyZS13aGl0ZTtcclxuICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAuM3M7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYmFycyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHRvcDogMTNweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB0b3A6IDI3cHg7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb24tZGVsYXk6IC4xcztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmJsYWNrLWJhcnMtY29sb3IsXHJcbiAgICAuYmxhY2stYmFycy1jb2xvcjo6YWZ0ZXIsXHJcbiAgICAuYmxhY2stYmFycy1jb2xvcjo6YmVmb3JlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFyaztcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4ubmF2IHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAkYnJvd24tZ3JhZGllbnQtc29saWQ7XHJcbiAgICB6LWluZGV4OiAxNTA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzIGN1YmljLWJlemllciguMTcsIC42NywgMSwgMS4yMyk7XHJcblxyXG4gICAgJi0tYWN0aXZlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG5cclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAkcHVyZS13aGl0ZTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIG1hcmdpbjogMC41ZW0gMDtcclxuICAgICAgICBwYWRkaW5nOiAwLjVlbSAwO1xyXG5cclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBib3R0b206IDEwcHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNXM7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodC13aGl0ZTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmhvdmVyOjpiZWZvcmUge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5oZWFkZXIge1xyXG5cclxuXHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAkZ3JleS1ncmFkaWVudC1zb2xpZDtcclxuXHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBvcGFjaXR5OiAwLjQ7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJMaW5kZW4gSGlsbFwiLCBzZXJpZjtcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcblxyXG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgICAgICAgY29sb3I6ICRzZWNvbmQtY29sb3I7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVTaG93IDJzIGVhc2UtaW4tb3V0O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMTBweDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGNvbG9yOiAkc2Vjb25kLWNvbG9yO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVlbTtcclxuICAgICAgICBhbmltYXRpb246IGhhbmRsZVNob3dEb3duIDJzIGVhc2UtaW4tb3V0IDFzIGZvcndhcmRzO1xyXG4gICAgICAgIC8vIGFuaW1hdGlvbjogbmFtZSBkdXJhdGlvbiB0aW1pbmctZnVuY3Rpb24gZGVsYXkgaXRlcmF0aW9uLWNvdW50IGRpcmVjdGlvbiBmaWxsLW1vZGU7XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2J0biB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgICAgIGNvbG9yOiAkbGlnaHQtd2hpdGU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgcGFkZGluZzogMC42ZW0gMS4yZW07XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJG1haW4tY29sb3I7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXM7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVTaG93T3BhY2l0eSAzcyBlYXNlLWluLW91dCAycyBmb3J3YXJkcztcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tY29sb3ItaG92ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2Fycm93IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiA1cHg7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LXdoaXRlO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtMThweDtcclxuXHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4vL2hlYWRlciBhbmltYXRpb25zXHJcblxyXG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3cge1xyXG4gICAgMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDcwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3dEb3duIHtcclxuICAgIDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGhhbmRsZVNob3dPcGFjaXR5IHtcclxuICAgIDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAxMDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG5cclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5cclxuLmFib3V0IHtcclxuXHJcblxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB3aWR0aDogMjYwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC41ZW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogM3M7XHJcbiAgICAgICAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC4yKTtcclxuXHJcbiAgICAgICAgJi1ib3gge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMTk0LCAxOTMsIDE5MywgMC41NDgpO1xyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiRG9zaXNcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjhyZW07XHJcbiAgICAgICAgcGFkZGluZzogMWVtIDFlbTtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmFjdGl2ZUFuaW1hdGlvbiB7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVTaG93IDJzIGVhc2UtaW4tb3V0IGZvcndhcmRzO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbi5hY3RpdmVWaWRlbyB7XHJcbiAgICBhbmltYXRpb246IGhhbmRsZVNob3cgMS41cyBlYXNlLWluLW91dCBmb3J3YXJkcztcclxuXHJcbn1cclxuXHJcbi5oZXJvIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogJGJyb3duLWdyYWRpZW50O1xyXG4gICAgaGVpZ2h0OiAxMzB2aDtcclxuICAgIHBhZGRpbmc6IDFlbSAxZW07XHJcblxyXG4gICAgJl9fdmlkZW8ge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC41KTtcclxuXHJcbiAgICAgICAgJi0tc2Vjb25kIHtcclxuICAgICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAuNXM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG4gICAgJl9fdGV4dDIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICByaWdodDogNTAlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIC01MCUpO1xyXG5cclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG4ub2ZmZXJzIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6ICRicm93bi1ncmFkaWVudDtcclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IC4yZW07XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogLjVlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICRtYWluLWNvbG9yO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkbWFpbi1jb2xvcjtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luOiAwLjVlbSAwO1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcblxyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICBjb2xvcjogJGxpZ2h0LWdyZWVuO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkRvc2lzXCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5ydWxlcyB7XHJcbiAgICB6LWluZGV4OiAyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4uLy4uL2Rpc3QvaW1nL2hlYWRlcl9pbWcuanBnKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxOTQsIDE5MywgMTkzLCAwLjU0OCk7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAmX19oZXJvIHtcclxuICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgyKTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDMwMHZoO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAmX19oZWFkZXIge1xyXG4gICAgICAgIGNvbG9yOiAkbGlnaHQtd2hpdGU7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IDQuNXJlbTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBoYW5kbGVTaG93IDJzIGVhc2UtaW4tb3V0IGZvcndhcmRzO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgICAgIGNvbG9yOiAkbGlnaHQtd2hpdGU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIC41ZW07XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYm94ZXMge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW1zIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMDtcclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LXdoaXRlO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkRvc2lzXCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICAgICAgcGFkZGluZzogLjJlbSAwO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19iYWNrIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xyXG4gICAgICAgIGNvbG9yOiAkbGlnaHQtd2hpdGU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgICAgICBmb250LXNpemU6IDIuMnJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19mYXEge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDJlbTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgIH1cclxufVxyXG5cclxuLmFjb3JkZW9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTk0LCAxOTMsIDE5MywgMC41NDgpO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggMjBweCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcclxuXHJcblxyXG4gICAgJi1ib3gge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkRvc2lzXCIsIHNlcmlmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG5cclxuICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG5cclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMFxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJi1idG4ge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgICAgICAgY29sb3I6ICRwdXJlLXdoaXRlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcclxuXHJcbiAgICAgICAgLy8gXHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmLWluZm8ge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG5cclxuICAgICAgICAmLXRleHQge1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbGlnaHQtd2hpdGU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW0gMWVtO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHB1cmUtd2hpdGU7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4uYWN0aXZlQWNvcmRlb24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuLnBvcnRmb2xpbyB7XHJcbiAgICBwYWRkaW5nOiAyZW0gMDtcclxuXHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBub25lO1xyXG4gICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBoZWlnaHQ6IDI4MHB4O1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgJl9faW1hZ2VzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMmVtO1xyXG5cclxuXHJcbiAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyODBweDtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCByZ2JhKCRjb2xvcjogIzJlMmUyZTJlLCAkYWxwaGE6IDAuMik7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgLjRzLCB0cmFuc2Zvcm0gLjRzO1xyXG5cclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiA4cHggOHB4IDEzcHggcmdiYSgkY29sb3I6ICMyZTJlMmUyZSwgJGFscGhhOiAwLjMpO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fdmlkZW8ge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC41KTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICAmX19ib3gge1xyXG5cclxuXHJcblxyXG4gICAgICAgICYtLWxlZnQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1yaWdodCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICAmX19tb3JlIHtcclxuICAgICAgICBjb2xvcjogJGxpZ2h0LWdyZWVuO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbiAgICAgICAgJi0tYm94IHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLXRleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuM3JlbTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2luc3RhZ3JhbSB7XHJcblxyXG4gICAgICAgIGZvbnQtc2l6ZTogOXJlbTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4ucmV2aWV3IHtcclxuICAgIGhlaWdodDogODB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVyZS13aGl0ZTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19pbWcge1xyXG4gICAgICAgIHotaW5kZXg6IDEwMDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiAtMzAwcHg7XHJcbiAgICAgICAgbGVmdDogLTEwMHB4O1xyXG4gICAgICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgJl9fYXNpZGUge1xyXG5cclxuICAgICAgICB3aWR0aDogMjAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHQtZ3JlZW47XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBjb2xvcjogJHNlY29uZC1jb2xvcjtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgcmlnaHQ6IDEyMHB4O1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlBsYXlmYWlyIERpc3BsYXlcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICBmb250LXNpemU6IDEycmVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBoZWlnaHQ6IDkwJTtcclxuICAgICAgICB3aWR0aDogOTUlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwaW5rLWNvbG9yO1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbSAyZW07XHJcbiAgICB9XHJcblxyXG5cclxuICAgICZfX2luc3RhZ3JhbSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAkbGlnaHQtZ3JlZW47XHJcbiAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDUwcHg7XHJcbiAgICAgICAgcmlnaHQ6IDUwcHg7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTGluZGVuIEhpbGxcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHB1cmUtd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgICAgICBib3gtc2hhZG93OiA4cHggOHB4IDEzcHggcmdiYSgkY29sb3I6ICMyZTJlMmUyZSwgJGFscGhhOiAwLjMpO1xyXG5cclxuICAgICAgICBhbmltYXRpb246IGJ0bkFuaW1hdGlvbiAxLjVzIGluZmluaXRlO1xyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgQGtleWZyYW1lcyBidG5BbmltYXRpb24ge1xyXG4gICAgICAgIDAlIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIDUwJSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIDEwMCUge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIG1hcmdpbjogMCAxZW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzLCBib3gtc2hhZG93IDFzO1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogOHB4IDhweCAxM3B4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC4zKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fb3BpbmlvbiB7XHJcblxyXG4gICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHB1cmUtd2hpdGU7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGJveC1zaGFkb3c6IDVweCA1cHggNXB4IHJnYmEoJGNvbG9yOiAjMmUyZTJlMmUsICRhbHBoYTogMC4yKTtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2luZm8ge1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9faGVhZGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTGluZGVuIEhpbGxcIiwgc2VyaWY7XHJcbiAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDE5NCwgMTkzLCAxOTMsIDAuNTQ4KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDNlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19zbGljayB7XHJcbiAgICAgICAgY29sb3I6ICRwdXJlLXdoaXRlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbn0iLCIvL2NvbXBvbmVudHNcclxuQHVzZSAnLi92YXJpYWJsZXMnIGFzICo7XHJcblxyXG4ud3JhcHBlcntcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDE3MDBweDtcclxufVxyXG4uc2VjdGlvbi1oZWFkaW5nIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIkxpbmRlbiBIaWxsXCIsIHNlcmlmO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcblxyXG5cclxuICAgICYtLXJpZ2h0IHtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIH1cclxufVxyXG4iLCIvLy0tMzkwLS0vL1xyXG5cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAzOTBweCkge1xyXG5cclxuICAgIC5wb3J0Zm9saW8ge1xyXG5cclxuICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyMzBweDtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pbWFnZXMge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG4vLy0tNDMwLS0vL1xyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDQzMHB4KSB7XHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMTcwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pbWFnZXMge1xyXG5cclxuICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTcwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcblxyXG5cclxufSIsIiAvLyBAbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIHtcclxuIC8vICAgICAvKiBTdHlsaXphY2plIGRsYSB0ZWxlZm9uw7N3IG8gd2nEmWtzenljaCBla3JhbmFjaCAqL1xyXG4gLy8gfVxyXG4gLy8gQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XHJcbiAvLyAgICAgLyogU3R5bGl6YWNqZSBkbGEgd2nEmWtzenljaCB0ZWxlZm9uw7N3ICovXHJcbiAvLyB9XHJcblxyXG4gQHVzZSAnLi4vdmFyaWFibGVzJyBhcyAqO1xyXG5cclxuXHJcbiBAbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIHtcclxuICAgICAuaGVhZGVyIHtcclxuICAgICAgICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDRyZW07XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG5cclxuXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX2Fycm93IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xyXG4gICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcblxyXG5cclxuICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgfVxyXG5cclxuICAgICAuYWJvdXQge1xyXG4gICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLmhlcm8ge1xyXG4gICAgICAgICBoZWlnaHQ6IDE0MHZoO1xyXG5cclxuICAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICAgaGVpZ2h0OiA0NTBweDtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLm9mZmVycyB7XHJcbiAgICAgICAgICZfX2l0ZW0ge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICAgfVxyXG5cclxuICAgICAucnVsZXMge1xyXG5cclxuXHJcbiAgICAgICAgICZfX2hlYWRlciB7XHJcblxyXG4gICAgICAgICAgICAgZm9udC1zaXplOiA1cmVtO1xyXG5cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9fdGl0bGUge1xyXG5cclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMy41cmVtO1xyXG5cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLmFjb3JkZW9uIHtcclxuICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG5cclxuICAgICAgICAgJi1idG4ge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgICAucG9ydGZvbGlvIHtcclxuICAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgICAgICAgICAgaGVpZ2h0OiAyNTBweDtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiB9XHJcblxyXG5cclxuXHJcbiBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcclxuXHJcbiAgICAgLmhlYWRlciB7XHJcbiAgICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiA0LjVyZW07XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XHJcblxyXG5cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9fYXJyb3cge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuXHJcblxyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19idG4ge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAxLjdyZW07XHJcblxyXG4gICAgICAgICB9XHJcblxyXG5cclxuICAgICB9XHJcblxyXG4gICAgIC5hYm91dCB7XHJcbiAgICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMy41cmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19pbWcge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgICAgICAgaGVpZ2h0OiA0NTBweDtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDMuNXJlbTtcclxuXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgfVxyXG5cclxuICAgICAuaGVybyB7XHJcbiAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHJcbiAgICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgIGhlaWdodDogMzUwcHg7XHJcbiAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICAmX190ZXh0MiB7XHJcbiAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICByaWdodDogNTAlO1xyXG4gICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIC01MCUpO1xyXG5cclxuXHJcbiAgICAgICAgIH1cclxuXHJcblxyXG4gICAgIH1cclxuXHJcbiAgICAgLm9mZmVycyB7XHJcbiAgICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMy41cmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgaGVpZ2h0OiA3MHB4O1xyXG4gICAgICAgICAgICAgdG9wOiAyNzBweDtcclxuICAgICAgICAgICAgIGxlZnQ6IC0xMHB4O1xyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgICAuYWNvcmRlb24ge1xyXG4gICAgICAgICB3aWR0aDogNTAwcHg7XHJcblxyXG4gICAgICAgICAmLWJ0biB7XHJcbiAgICAgICAgICAgICB3aWR0aDogNTAwcHg7XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG5cclxuICAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgIGhlaWdodDogMjgwcHg7XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX2ltYWdlcyB7XHJcblxyXG4gICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICAgICAgIGhlaWdodDogMjgwcHg7XHJcblxyXG4gICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiB9XHJcblxyXG5cclxuIC8vLS02NzAtLS8vXHJcblxyXG4gQG1lZGlhIChtaW4td2lkdGg6IDY3MHB4KSB7XHJcbiAgICAgLmhlcm8ge1xyXG4gICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgICAub2ZmZXJzIHtcclxuICAgICAgICAgJl9fdmlkZW8ge1xyXG5cclxuICAgICAgICAgICAgIGhlaWdodDogODBweDtcclxuICAgICAgICAgICAgIHRvcDogMjY1cHg7XHJcbiAgICAgICAgICAgICBsZWZ0OiAxMHB4O1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgIH1cclxuXHJcbiAgICAgLnJ1bGVzIHtcclxuXHJcblxyXG4gICAgICAgICAmX19oZWFkZXIge1xyXG5cclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogNS41cmVtO1xyXG5cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9fdGl0bGUge1xyXG5cclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX2l0ZW0ge1xyXG5cclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcblxyXG5cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLmFjb3JkZW9uIHtcclxuICAgICAgICAgd2lkdGg6IDYwMHB4O1xyXG5cclxuICAgICAgICAgJi1idG4ge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDYwMHB4O1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICYtaW5mbyB7XHJcblxyXG5cclxuICAgICAgICAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgICAgICAgICAgY29sb3I6ICRsaWdodC13aGl0ZTtcclxuICAgICAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcblxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgIHdpZHRoOiAxNzBweDtcclxuICAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX2ltYWdlcyB7XHJcblxyXG4gICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgICAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcblxyXG4gICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuIH0iLCIvLyBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuLy8gICAgIC8qIFN0eWxpemFjamUgZGxhIHRhYmxldMOzdyAqL1xyXG4vLyB9XHJcbi8vIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG4vLyAgICAgLyogU3R5bGl6YWNqZSBkbGEgd2nEmWtzenljaCB0YWJsZXTDs3cgaSBtYcWCeWNoIGxhcHRvcMOzdyAqL1xyXG4vLyB9XHJcblxyXG5AdXNlICcuLi92YXJpYWJsZXMnIGFzICo7XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgIC5oZWFkZXIge1xyXG4gICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDZyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG5cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19hcnJvdyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmhlcm8ge1xyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0NTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm9mZmVycyB7XHJcbiAgICAgICAgJl9faXRlbSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAxZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX192aWRlbyB7XHJcblxyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgICAgICB0b3A6IDM4NXB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fYm94ZXMge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyNTBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICAmLS1sZWZ0IHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtLXJpZ2h0IHtcclxuXHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwJTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodC1ncmVlbjtcclxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgY29sb3I6ICRzZWNvbmQtY29sb3I7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgdG9wOiAzNTBweDtcclxuICAgICAgICAgICAgcmlnaHQ6IC0xNXB4O1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJQbGF5ZmFpciBEaXNwbGF5XCIsIHNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEycmVtO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cclxuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcclxuXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW5mbyB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiUGxheWZhaXIgRGlzcGxheVwiLCBzZXJpZjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vLS05MDAtLS8vXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTAwcHgpIHtcclxuICAgIC5hYm91dCB7XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA0cmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgd2lkdGg6IDU1JTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2luZm8ge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0NTBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDRyZW07XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAub2ZmZXJzIHtcclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2l0ZW0ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuMnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuXHJcblxyXG4gICAgICAgICAgICB0b3A6IDQzMHB4O1xyXG4gICAgICAgICAgICBsZWZ0OiA2MHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLnJ1bGVzIHtcclxuXHJcblxyXG4gICAgICAgICZfX2hlYWRlciB7XHJcblxyXG4gICAgICAgICAgICBmb250LXNpemU6IDZyZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG5cclxuICAgICAgICAgICAgZm9udC1zaXplOiA1cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2l0ZW0ge1xyXG5cclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcblxyXG5cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5hY29yZGVvbiB7XHJcbiAgICAgICAgd2lkdGg6IDc1MHB4O1xyXG5cclxuICAgICAgICAmLWJveCB7fVxyXG5cclxuICAgICAgICAmLWJ0biB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA3NTBweDtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjgwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyODBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtMjBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aCA6IDk5MnB4KSB7fVxyXG5cclxuXHJcblxyXG4vLy0tMTAyNC0tLy9cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIC5oZXJvIHtcclxuICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgICAgICZfX3RleHQyIHtcclxuXHJcbiAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAub2ZmZXJzIHtcclxuICAgICAgICAmX192aWRlbyB7XHJcblxyXG5cclxuICAgICAgICAgICAgdG9wOiA0MzBweDtcclxuICAgICAgICAgICAgbGVmdDogMTUwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wb3J0Zm9saW8ge1xyXG5cclxuICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzMDBweDtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX19pbWFnZXMge1xyXG5cclxuICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwMHB4O1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgcmlnaHQ6IC00MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi8vIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcclxuLy8gICAgIC8qIFN0eWxpemFjamUgZGxhIHdpxJlrc3p5Y2ggbGFwdG9ww7N3IGkgbW9uaXRvcsOzdyBkZXNrdG9wb3d5Y2ggKi9cclxuLy8gfVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDExMDBweCkge1xyXG5cclxuICAgIC5wb3J0Zm9saW8ge1xyXG4gICAgXHJcbiAgICAgICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzUwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAgICAgICAgICZfX2ltYWdlcyB7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAuaGVhZGVyIHtcclxuICAgICAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA3cmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fYXJyb3cge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fYnRuIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAuYWJvdXQge1xyXG5cclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDVyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogNDAwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNjAwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA1cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuaGVybyB7XHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDY1MHB4O1xyXG4gICAgICAgIH1cclxuXHJcblxyXG5cclxuICAgICAgICAmX190ZXh0MiB7XHJcblxyXG4gICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm9mZmVycyB7XHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDVyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjNyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX192aWRlbyB7XHJcblxyXG5cclxuICAgICAgICAgICAgdG9wOiA0NTVweDtcclxuICAgICAgICAgICAgbGVmdDogMjQ1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5ydWxlcyB7XHJcblxyXG5cclxuICAgICAgICAmX19oZWFkZXIge1xyXG5cclxuICAgICAgICAgICAgZm9udC1zaXplOiA2LjVyZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG5cclxuICAgICAgICAgICAgZm9udC1zaXplOiA1LjVyZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faXRlbSB7XHJcblxyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuM3JlbTtcclxuXHJcblxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmFjb3JkZW9uIHtcclxuICAgICAgICB3aWR0aDogODAwcHg7XHJcblxyXG4gICAgICAgICYtYnRuIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjNyZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MDBweDtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wb3J0Zm9saW8ge1xyXG5cclxuICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNTBweDtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX19pbWFnZXMge1xyXG5cclxuICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDM1MHB4O1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtNjBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59IiwiLy8gPjEyMDBweFxyXG5cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcclxuXHJcbiAgICAub2ZmZXJzIHtcclxuICAgICAgICAmX192aWRlbyB7XHJcbiAgICAgICAgICAgIHRvcDogNDU1cHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDQ2MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucG9ydGZvbGlvIHtcclxuXHJcbiAgICAgICAgJl9fdmlkZW8ge1xyXG4gICAgICAgICAgICB3aWR0aDogMzUwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDUwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9faW1hZ2VzIHtcclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDM1MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0NTBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICByaWdodDogLTYwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTgwMHB4KSB7XHJcblxyXG4gICAgLmhlcm8ge1xyXG4gICAgICAgICZfX3ZpZGVvIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA3MDBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnJ1bGVzIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xyXG5cclxuICAgICAgICAmX19iYWNrIHtcclxuXHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0iXX0= */
